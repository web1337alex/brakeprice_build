<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '341a511916aaa885d4cfcf04ea3542f0',
  'package' => 'modx',
  'class' => 'modPlugin',
  'signature' => 'c4a2f21cbbf1ca2664eb7f929a1c71c1',
  'native_key' => 10,
  'object' => '{"id":10,"source":1,"property_preprocess":0,"name":"pdoTools","description":"","editor_type":0,"category":12,"cache_type":0,"plugincode":"\\/** @var modX $modx *\\/\\nswitch ($modx->event->name) {\\n\\n    case \'OnMODXInit\':\\n        $fqn = $modx->getOption(\'pdoTools.class\', null, \'pdotools.pdotools\', true);\\n        $path = $modx->getOption(\'pdotools_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\n        $modx->loadClass($fqn, $path, false, true);\\n\\n        $fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\n        $path = $modx->getOption(\'pdofetch_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\n        $modx->loadClass($fqn, $path, false, true);\\n        break;\\n\\n    case \'OnSiteRefresh\':\\n        \\/** @var pdoTools $pdoTools *\\/\\n        if ($pdoTools = $modx->getService(\'pdoTools\')) {\\n            if ($pdoTools->clearFileCache()) {\\n                $modx->log(modX::LOG_LEVEL_INFO, $modx->lexicon(\'refresh_default\') . \': pdoTools\');\\n            }\\n        }\\n        break;\\n\\n    case \'OnWebPagePrerender\':\\n        $parser = $modx->getParser();\\n        if ($parser instanceof pdoParser) {\\n            foreach ($parser->pdoTools->ignores as $key => $val) {\\n                $modx->resource->_output = str_replace($key, $val, $modx->resource->_output);\\n            }\\n        }\\n        break;\\n}","locked":0,"properties":null,"disabled":0,"moduleguid":"","static":0,"static_file":"core\\/components\\/pdotools\\/elements\\/plugins\\/plugin.pdotools.php","content":"\\/** @var modX $modx *\\/\\nswitch ($modx->event->name) {\\n\\n    case \'OnMODXInit\':\\n        $fqn = $modx->getOption(\'pdoTools.class\', null, \'pdotools.pdotools\', true);\\n        $path = $modx->getOption(\'pdotools_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\n        $modx->loadClass($fqn, $path, false, true);\\n\\n        $fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\n        $path = $modx->getOption(\'pdofetch_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\n        $modx->loadClass($fqn, $path, false, true);\\n        break;\\n\\n    case \'OnSiteRefresh\':\\n        \\/** @var pdoTools $pdoTools *\\/\\n        if ($pdoTools = $modx->getService(\'pdoTools\')) {\\n            if ($pdoTools->clearFileCache()) {\\n                $modx->log(modX::LOG_LEVEL_INFO, $modx->lexicon(\'refresh_default\') . \': pdoTools\');\\n            }\\n        }\\n        break;\\n\\n    case \'OnWebPagePrerender\':\\n        $parser = $modx->getParser();\\n        if ($parser instanceof pdoParser) {\\n            foreach ($parser->pdoTools->ignores as $key => $val) {\\n                $modx->resource->_output = str_replace($key, $val, $modx->resource->_output);\\n            }\\n        }\\n        break;\\n}"}',
);