<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'd4bfeed5d43a79387df79b660dcf5e02',
  'package' => 'modx',
  'class' => 'modPlugin',
  'signature' => '184128cd5d2296d5dbe50206b7830e56',
  'native_key' => 12,
  'object' => '{"id":12,"source":0,"property_preprocess":0,"name":"fileTranslit","description":"This plugin transliterates file names automatically on upload.","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\r\\n * @author Anton Andersen <anton.a.andersen@gmail.com>\\r\\n *\\r\\n * This plugin transliterates filenames on upload via MODX filemanager.\\r\\n * It should be bent to the OnFileManagerUpload event.\\r\\n * Project page: https:\\/\\/github.com\\/TriAnMan\\/filetranslit\\r\\n *\\/\\r\\n$currentdoc = $modx->newObject(\'modResource\');\\r\\nforeach ($files as &$file) {\\r\\n\\tif ($file[\'error\'] == 0) {\\r\\n\\t\\t$newName = $currentdoc->cleanAlias($file[\'name\']);\\r\\n\\r\\n\\t\\t\\/\\/file rename logic\\r\\n\\t\\tif ($file[\'name\'] !== $newName) {\\r\\n\\t\\t\\t$arDirFiles = $source->getObjectsInContainer($directory);\\r\\n\\t\\t\\tforeach ($arDirFiles as &$dirFile){\\r\\n\\t\\t\\t\\tif($dirFile[\'name\']===$newName){\\r\\n\\t\\t\\t\\t\\t\\/\\/delete file if there is one with new name\\r\\n\\t\\t\\t\\t\\t$source->removeObject($directory . $newName);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\/\\/transliterate uploaded file\\r\\n\\t\\t\\t$source->renameObject($directory . $file[\'name\'], $newName);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}","locked":0,"properties":null,"disabled":0,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\r\\n * @author Anton Andersen <anton.a.andersen@gmail.com>\\r\\n *\\r\\n * This plugin transliterates filenames on upload via MODX filemanager.\\r\\n * It should be bent to the OnFileManagerUpload event.\\r\\n * Project page: https:\\/\\/github.com\\/TriAnMan\\/filetranslit\\r\\n *\\/\\r\\n$currentdoc = $modx->newObject(\'modResource\');\\r\\nforeach ($files as &$file) {\\r\\n\\tif ($file[\'error\'] == 0) {\\r\\n\\t\\t$newName = $currentdoc->cleanAlias($file[\'name\']);\\r\\n\\r\\n\\t\\t\\/\\/file rename logic\\r\\n\\t\\tif ($file[\'name\'] !== $newName) {\\r\\n\\t\\t\\t$arDirFiles = $source->getObjectsInContainer($directory);\\r\\n\\t\\t\\tforeach ($arDirFiles as &$dirFile){\\r\\n\\t\\t\\t\\tif($dirFile[\'name\']===$newName){\\r\\n\\t\\t\\t\\t\\t\\/\\/delete file if there is one with new name\\r\\n\\t\\t\\t\\t\\t$source->removeObject($directory . $newName);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\/\\/transliterate uploaded file\\r\\n\\t\\t\\t$source->renameObject($directory . $file[\'name\'], $newName);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}',
);