<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'a7172edd4f710ce68c6609cf635bb108',
  'package' => 'modx',
  'class' => 'modPlugin',
  'signature' => '6729b65b15faf505eed795ab17899a17',
  'native_key' => 21,
  'object' => '{"id":21,"source":0,"property_preprocess":0,"name":"migxResizeOnUpload","description":"","editor_type":0,"category":3,"cache_type":0,"plugincode":"\\/**\\n * migxResizeOnUpload Plugin\\n *\\n * Events: OnFileManagerUpload\\n * Author: Bruno Perner <b.perner@gmx.de>\\n * Modified to read multiple configs from mediasource-property\\n * \\n * First Author: Vasiliy Naumkin <bezumkin@yandex.ru>\\n * Required: PhpThumbOf snippet for resizing images\\n * \\n * Example: mediasource - property \'resizeConfig\':\\n * [{\\"alias\\":\\"origin\\",\\"w\\":\\"500\\",\\"h\\":\\"500\\",\\"far\\":1},{\\"alias\\":\\"thumb\\",\\"w\\":\\"150\\",\\"h\\":\\"150\\",\\"far\\":1}]\\n *\\/\\n\\nif ($modx->event->name != \'OnFileManagerUpload\') {\\n    return;\\n}\\n\\n\\n$file = $modx->event->params[\'files\'][\'file\'];\\n$directory = $modx->event->params[\'directory\'];\\n\\nif ($file[\'error\'] != 0) {\\n    return;\\n}\\n\\n$name = $file[\'name\'];\\n\\/\\/$extensions = explode(\',\', $modx->getOption(\'upload_images\'));\\n\\n$source = $modx->event->params[\'source\'];\\n\\nif ($source instanceof modMediaSource) {\\n    \\/\\/$dirTree = $modx->getOption(\'dirtree\', $_REQUEST, \'\');\\n    \\/\\/$modx->setPlaceholder(\'docid\', $resource_id);\\n    $source->initialize();\\n    $basePath = str_replace(\'\\/.\\/\', \'\\/\', $source->getBasePath());\\n    \\/\\/$cachepath = $cachepath . $dirTree;\\n    $baseUrl = $modx->getOption(\'site_url\') . $source->getBaseUrl();\\n    \\/\\/$baseUrl = $baseUrl . $dirTree;\\n    $sourceProperties = $source->getPropertyList();\\n\\n    \\/\\/echo \'<pre>\' . print_r($sourceProperties, 1) . \'<\\/pre>\';\\n    \\/\\/$allowedExtensions = $modx->getOption(\'allowedFileTypes\', $sourceProperties, \'\');\\n    \\/\\/$allowedExtensions = empty($allowedExtensions) ? \'jpg,jpeg,png,gif\' : $allowedExtensions;\\n    \\/\\/$maxFilesizeMb = $modx->getOption(\'maxFilesizeMb\', $sourceProperties, \'8\');\\n    \\/\\/$maxFiles = $modx->getOption(\'maxFiles\', $sourceProperties, \'0\');\\n    \\/\\/$thumbX = $modx->getOption(\'thumbX\', $sourceProperties, \'100\');\\n    \\/\\/$thumbY = $modx->getOption(\'thumbY\', $sourceProperties, \'100\');\\n    $resizeConfigs = $modx->getOption(\'resizeConfigs\', $sourceProperties, \'\');\\n    $resizeConfigs = $modx->fromJson($resizeConfigs);\\n    $thumbscontainer = $modx->getOption(\'thumbscontainer\', $sourceProperties, \'thumbs\\/\');\\n    $imageExtensions = $modx->getOption(\'imageExtensions\', $sourceProperties, \'jpg,jpeg,png,gif,JPG\');\\n    $imageExtensions = explode(\',\', $imageExtensions);\\n    \\/\\/$uniqueFilenames = $modx->getOption(\'uniqueFilenames\', $sourceProperties, false);\\n    \\/\\/$onImageUpload = $modx->getOption(\'onImageUpload\', $sourceProperties, \'\');\\n    \\/\\/$onImageRemove = $modx->getOption(\'onImageRemove\', $sourceProperties, \'\');\\n    $cleanalias = $modx->getOption(\'cleanFilename\', $sourceProperties, false);\\n\\n}\\n\\nif (is_array($resizeConfigs) && count($resizeConfigs) > 0) {\\n    foreach ($resizeConfigs as $rc) {\\n        if (isset($rc[\'alias\'])) {\\n            $filePath = $basePath . $directory;\\n            $filePath = str_replace(\'\\/\\/\',\'\\/\',$filePath);\\n            if ($rc[\'alias\'] == \'origin\') {\\n                $thumbPath = $filePath;\\n            } else {\\n                $thumbPath = $filePath . $rc[\'alias\'] . \'\\/\';\\n                $permissions = octdec(\'0\' . (int)($modx->getOption(\'new_folder_permissions\', null, \'755\', true)));\\n                if (!@mkdir($thumbPath, $permissions, true)) {\\n                    $modx->log(MODX_LOG_LEVEL_ERROR, sprintf(\'[migxResourceMediaPath]: could not create directory %s).\', $thumbPath));\\n                } else {\\n                    chmod($thumbPath, $permissions);\\n                }\\n\\n            }\\n\\n\\n            $filename = $filePath . $name;\\n            $thumbname = $thumbPath . $name;\\n            $ext = substr(strrchr($name, \'.\'), 1);\\n            if (in_array($ext, $imageExtensions)) {\\n                $sizes = getimagesize($filename);\\n                echo $sizes[0]; \\n                \\/\\/$format = substr($sizes[\'mime\'], 6);\\n                if ($sizes[0] > $rc[\'w\'] || $sizes[1] > $rc[\'h\']) {\\n                    if ($sizes[0] < $rc[\'w\']) {\\n                        $rc[\'w\'] = $sizes[0];\\n                    }\\n                    if ($sizes[1] < $rc[\'h\']) {\\n                        $rc[\'h\'] = $sizes[1];\\n                    }\\n                    $type = $sizes[0] > $sizes[1] ? \'landscape\' : \'portrait\';\\n                    if (isset($rc[\'far\']) && $rc[\'far\'] == \'1\' && isset($rc[\'w\']) && isset($rc[\'h\'])) {\\n                        if ($type = \'landscape\') {\\n                            unset($rc[\'h\']);\\n                        }else {\\n                            unset($rc[\'w\']);\\n                        }\\n                    }\\n\\n                    $options = \'\';\\n                    foreach ($rc as $k => $v) {\\n                        if ($k != \'alias\') {\\n                            $options .= \'&\' . $k . \'=\' . $v;\\n                        }\\n                    }\\n                    $resized = $modx->runSnippet(\'phpthumbof\', array(\'input\' => $filePath . $name, \'options\' => $options));\\n                    rename(MODX_BASE_PATH . substr($resized, 1), $thumbname);\\n                }\\n            }\\n\\n\\n        }\\n    }\\n}","locked":0,"properties":"a:0:{}","disabled":0,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * migxResizeOnUpload Plugin\\n *\\n * Events: OnFileManagerUpload\\n * Author: Bruno Perner <b.perner@gmx.de>\\n * Modified to read multiple configs from mediasource-property\\n * \\n * First Author: Vasiliy Naumkin <bezumkin@yandex.ru>\\n * Required: PhpThumbOf snippet for resizing images\\n * \\n * Example: mediasource - property \'resizeConfig\':\\n * [{\\"alias\\":\\"origin\\",\\"w\\":\\"500\\",\\"h\\":\\"500\\",\\"far\\":1},{\\"alias\\":\\"thumb\\",\\"w\\":\\"150\\",\\"h\\":\\"150\\",\\"far\\":1}]\\n *\\/\\n\\nif ($modx->event->name != \'OnFileManagerUpload\') {\\n    return;\\n}\\n\\n\\n$file = $modx->event->params[\'files\'][\'file\'];\\n$directory = $modx->event->params[\'directory\'];\\n\\nif ($file[\'error\'] != 0) {\\n    return;\\n}\\n\\n$name = $file[\'name\'];\\n\\/\\/$extensions = explode(\',\', $modx->getOption(\'upload_images\'));\\n\\n$source = $modx->event->params[\'source\'];\\n\\nif ($source instanceof modMediaSource) {\\n    \\/\\/$dirTree = $modx->getOption(\'dirtree\', $_REQUEST, \'\');\\n    \\/\\/$modx->setPlaceholder(\'docid\', $resource_id);\\n    $source->initialize();\\n    $basePath = str_replace(\'\\/.\\/\', \'\\/\', $source->getBasePath());\\n    \\/\\/$cachepath = $cachepath . $dirTree;\\n    $baseUrl = $modx->getOption(\'site_url\') . $source->getBaseUrl();\\n    \\/\\/$baseUrl = $baseUrl . $dirTree;\\n    $sourceProperties = $source->getPropertyList();\\n\\n    \\/\\/echo \'<pre>\' . print_r($sourceProperties, 1) . \'<\\/pre>\';\\n    \\/\\/$allowedExtensions = $modx->getOption(\'allowedFileTypes\', $sourceProperties, \'\');\\n    \\/\\/$allowedExtensions = empty($allowedExtensions) ? \'jpg,jpeg,png,gif\' : $allowedExtensions;\\n    \\/\\/$maxFilesizeMb = $modx->getOption(\'maxFilesizeMb\', $sourceProperties, \'8\');\\n    \\/\\/$maxFiles = $modx->getOption(\'maxFiles\', $sourceProperties, \'0\');\\n    \\/\\/$thumbX = $modx->getOption(\'thumbX\', $sourceProperties, \'100\');\\n    \\/\\/$thumbY = $modx->getOption(\'thumbY\', $sourceProperties, \'100\');\\n    $resizeConfigs = $modx->getOption(\'resizeConfigs\', $sourceProperties, \'\');\\n    $resizeConfigs = $modx->fromJson($resizeConfigs);\\n    $thumbscontainer = $modx->getOption(\'thumbscontainer\', $sourceProperties, \'thumbs\\/\');\\n    $imageExtensions = $modx->getOption(\'imageExtensions\', $sourceProperties, \'jpg,jpeg,png,gif,JPG\');\\n    $imageExtensions = explode(\',\', $imageExtensions);\\n    \\/\\/$uniqueFilenames = $modx->getOption(\'uniqueFilenames\', $sourceProperties, false);\\n    \\/\\/$onImageUpload = $modx->getOption(\'onImageUpload\', $sourceProperties, \'\');\\n    \\/\\/$onImageRemove = $modx->getOption(\'onImageRemove\', $sourceProperties, \'\');\\n    $cleanalias = $modx->getOption(\'cleanFilename\', $sourceProperties, false);\\n\\n}\\n\\nif (is_array($resizeConfigs) && count($resizeConfigs) > 0) {\\n    foreach ($resizeConfigs as $rc) {\\n        if (isset($rc[\'alias\'])) {\\n            $filePath = $basePath . $directory;\\n            $filePath = str_replace(\'\\/\\/\',\'\\/\',$filePath);\\n            if ($rc[\'alias\'] == \'origin\') {\\n                $thumbPath = $filePath;\\n            } else {\\n                $thumbPath = $filePath . $rc[\'alias\'] . \'\\/\';\\n                $permissions = octdec(\'0\' . (int)($modx->getOption(\'new_folder_permissions\', null, \'755\', true)));\\n                if (!@mkdir($thumbPath, $permissions, true)) {\\n                    $modx->log(MODX_LOG_LEVEL_ERROR, sprintf(\'[migxResourceMediaPath]: could not create directory %s).\', $thumbPath));\\n                } else {\\n                    chmod($thumbPath, $permissions);\\n                }\\n\\n            }\\n\\n\\n            $filename = $filePath . $name;\\n            $thumbname = $thumbPath . $name;\\n            $ext = substr(strrchr($name, \'.\'), 1);\\n            if (in_array($ext, $imageExtensions)) {\\n                $sizes = getimagesize($filename);\\n                echo $sizes[0]; \\n                \\/\\/$format = substr($sizes[\'mime\'], 6);\\n                if ($sizes[0] > $rc[\'w\'] || $sizes[1] > $rc[\'h\']) {\\n                    if ($sizes[0] < $rc[\'w\']) {\\n                        $rc[\'w\'] = $sizes[0];\\n                    }\\n                    if ($sizes[1] < $rc[\'h\']) {\\n                        $rc[\'h\'] = $sizes[1];\\n                    }\\n                    $type = $sizes[0] > $sizes[1] ? \'landscape\' : \'portrait\';\\n                    if (isset($rc[\'far\']) && $rc[\'far\'] == \'1\' && isset($rc[\'w\']) && isset($rc[\'h\'])) {\\n                        if ($type = \'landscape\') {\\n                            unset($rc[\'h\']);\\n                        }else {\\n                            unset($rc[\'w\']);\\n                        }\\n                    }\\n\\n                    $options = \'\';\\n                    foreach ($rc as $k => $v) {\\n                        if ($k != \'alias\') {\\n                            $options .= \'&\' . $k . \'=\' . $v;\\n                        }\\n                    }\\n                    $resized = $modx->runSnippet(\'phpthumbof\', array(\'input\' => $filePath . $name, \'options\' => $options));\\n                    rename(MODX_BASE_PATH . substr($resized, 1), $thumbname);\\n                }\\n            }\\n\\n\\n        }\\n    }\\n}"}',
);