<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '02a03f2c8e07734cafb6894ad252939c',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => 'e42606ff6d91605e1b7a99274dc48f65',
  'native_key' => 54,
  'object' => '{"id":54,"source":1,"property_preprocess":0,"name":"pdoUsers","description":"","editor_type":0,"category":12,"cache_type":0,"snippet":"\\/** @var array $scriptProperties *\\/\\n\\/** @var pdoFetch $pdoFetch *\\/\\n$fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\n$path = $modx->getOption(\'pdofetch_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\nif ($pdoClass = $modx->loadClass($fqn, $path, false, true)) {\\n    $pdoFetch = new $pdoClass($modx, $scriptProperties);\\n} else {\\n    return false;\\n}\\n$pdoFetch->addTime(\'pdoTools loaded\');\\n\\n$class = \'modUser\';\\n$profile = \'modUserProfile\';\\n$member = \'modUserGroupMember\';\\n\\n\\/\\/ Start building \\"Where\\" expression\\n$where = array();\\nif (empty($showInactive)) {\\n    $where[$class . \'.active\'] = 1;\\n}\\nif (empty($showBlocked)) {\\n    $where[$profile . \'.blocked\'] = 0;\\n}\\n\\n\\/\\/ Add users profiles and groups\\n$innerJoin = array(\\n    $profile => array(\'alias\' => $profile, \'on\' => \\"$class.id = $profile.internalKey\\"),\\n);\\n\\n\\/\\/ Filter by users, groups and roles\\n$tmp = array(\\n    \'users\' => array(\\n        \'class\' => $class,\\n        \'name\' => \'username\',\\n        \'join\' => $class . \'.id\',\\n    ),\\n    \'groups\' => array(\\n        \'class\' => \'modUserGroup\',\\n        \'name\' => \'name\',\\n        \'join\' => $member . \'.user_group\',\\n    ),\\n    \'roles\' => array(\\n        \'class\' => \'modUserGroupRole\',\\n        \'name\' => \'name\',\\n        \'join\' => $member . \'.role\',\\n    ),\\n);\\nforeach ($tmp as $k => $p) {\\n    if (!empty($$k)) {\\n        $$k = array_map(\'trim\', explode(\',\', $$k));\\n        ${$k . \'_in\'} = ${$k . \'_out\'} = $fetch_in = $fetch_out = array();\\n        foreach ($$k as $v) {\\n            if (is_numeric($v)) {\\n                if ($v[0] == \'-\') {\\n                    ${$k . \'_out\'}[] = abs($v);\\n                } else {\\n                    ${$k . \'_in\'}[] = abs($v);\\n                }\\n            } else {\\n                if ($v[0] == \'-\') {\\n                    $fetch_out[] = $v;\\n                } else {\\n                    $fetch_in[] = $v;\\n                }\\n            }\\n        }\\n\\n        if (!empty($fetch_in) || !empty($fetch_out)) {\\n            $q = $modx->newQuery($p[\'class\'], array($p[\'name\'] . \':IN\' => array_merge($fetch_in, $fetch_out)));\\n            $q->select(\'id,\' . $p[\'name\']);\\n            $tstart = microtime(true);\\n            if ($q->prepare() && $q->stmt->execute()) {\\n                $modx->queryTime += microtime(true) - $tstart;\\n                $modx->executedQueries++;\\n                while ($row = $q->stmt->fetch(PDO::FETCH_ASSOC)) {\\n                    if (in_array($row[$p[\'name\']], $fetch_in)) {\\n                        ${$k . \'_in\'}[] = $row[\'id\'];\\n                    } else {\\n                        ${$k . \'_out\'}[] = $row[\'id\'];\\n                    }\\n                }\\n            }\\n        }\\n\\n        if (!empty(${$k . \'_in\'})) {\\n            $where[$p[\'join\'] . \':IN\'] = ${$k . \'_in\'};\\n        }\\n        if (!empty(${$k . \'_out\'})) {\\n            $where[$p[\'join\'] . \':NOT IN\'] = ${$k . \'_out\'};\\n        }\\n    }\\n}\\n\\nif (!empty($groups_in) || !empty($groups_out) || !empty($roles_in) || !empty($roles_out)) {\\n    $innerJoin[$member] = array(\'alias\' => $member, \'on\' => \\"$class.id = $member.member\\");\\n}\\n\\n\\/\\/ Fields to select\\n$select = array(\\n    $profile => implode(\',\', array_keys($modx->getFieldMeta($profile))),\\n    $class => implode(\',\', array_keys($modx->getFieldMeta($class))),\\n);\\n\\n\\/\\/ Add custom parameters\\nforeach (array(\'where\', \'innerJoin\', \'select\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = $scriptProperties[$v];\\n        if (!is_array($tmp)) {\\n            $tmp = json_decode($tmp, true);\\n        }\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n$pdoFetch->addTime(\'Conditions prepared\');\\n\\n$default = array(\\n    \'class\' => $class,\\n    \'innerJoin\' => json_encode($innerJoin),\\n    \'where\' => json_encode($where),\\n    \'select\' => json_encode($select),\\n    \'groupby\' => $class . \'.id\',\\n    \'sortby\' => $class . \'.id\',\\n    \'sortdir\' => \'ASC\',\\n    \'fastMode\' => false,\\n    \'return\' => !empty($returnIds) ? \'ids\' : \'chunks\',\\n    \'disableConditions\' => true,\\n);\\n\\nif (!empty($users_in) && (empty($scriptProperties[\'sortby\']) || $scriptProperties[\'sortby\'] == $class . \'.id\')) {\\n    $scriptProperties[\'sortby\'] = \\"find_in_set(`$class`.`id`,\'\\" . implode(\',\', $users_in) . \\"\')\\";\\n    $scriptProperties[\'sortdir\'] = \'\';\\n}\\n\\n\\/\\/ Merge all properties and run!\\n$pdoFetch->addTime(\'Query parameters ready\');\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\n$output = $pdoFetch->run();\\n\\n$log = \'\';\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n    $log .= \'<pre class=\\"pdoUsersLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\n\\/\\/ Return output\\nif (!empty($returnIds)) {\\n    $modx->setPlaceholder(\'pdoUsers.log\', $log);\\n    if (!empty($toPlaceholder)) {\\n        $modx->setPlaceholder($toPlaceholder, $output);\\n    } else {\\n        return $output;\\n    }\\n} elseif (!empty($toSeparatePlaceholders)) {\\n    $output[\'log\'] = $log;\\n    $modx->setPlaceholders($output, $toSeparatePlaceholders);\\n} else {\\n    $output .= $log;\\n\\n    if (!empty($tplWrapper) && (!empty($wrapIfEmpty) || !empty($output))) {\\n        $output = $pdoFetch->getChunk($tplWrapper, array(\'output\' => $output), $pdoFetch->config[\'fastMode\']);\\n    }\\n\\n    if (!empty($toPlaceholder)) {\\n        $modx->setPlaceholder($toPlaceholder, $output);\\n    } else {\\n        return $output;\\n    }\\n}","locked":0,"properties":"a:30:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:17:\\"pdotools_prop_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"returnIds\\";a:7:{s:4:\\"name\\";s:9:\\"returnIds\\";s:4:\\"desc\\";s:23:\\"pdotools_prop_returnIds\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:21:\\"pdotools_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"fastMode\\";a:7:{s:4:\\"name\\";s:8:\\"fastMode\\";s:4:\\"desc\\";s:22:\\"pdotools_prop_fastMode\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:20:\\"pdotools_prop_sortby\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:10:\\"modUser.id\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:21:\\"pdotools_prop_sortdir\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"ASC\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:4:\\"DESC\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:19:\\"pdotools_prop_limit\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"offset\\";a:7:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:20:\\"pdotools_prop_offset\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"outputSeparator\\";a:7:{s:4:\\"name\\";s:15:\\"outputSeparator\\";s:4:\\"desc\\";s:29:\\"pdotools_prop_outputSeparator\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:1:\\"\\n\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:27:\\"pdotools_prop_toPlaceholder\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"groups\\";a:7:{s:4:\\"name\\";s:6:\\"groups\\";s:4:\\"desc\\";s:20:\\"pdotools_prop_groups\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"roles\\";a:7:{s:4:\\"name\\";s:5:\\"roles\\";s:4:\\"desc\\";s:19:\\"pdotools_prop_roles\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"users\\";a:7:{s:4:\\"name\\";s:5:\\"users\\";s:4:\\"desc\\";s:19:\\"pdotools_prop_users\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:19:\\"pdotools_prop_where\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"showInactive\\";a:7:{s:4:\\"name\\";s:12:\\"showInactive\\";s:4:\\"desc\\";s:26:\\"pdotools_prop_showInactive\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"showBlocked\\";a:7:{s:4:\\"name\\";s:11:\\"showBlocked\\";s:4:\\"desc\\";s:25:\\"pdotools_prop_showBlocked\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"idx\\";a:7:{s:4:\\"name\\";s:3:\\"idx\\";s:4:\\"desc\\";s:17:\\"pdotools_prop_idx\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"first\\";a:7:{s:4:\\"name\\";s:5:\\"first\\";s:4:\\"desc\\";s:19:\\"pdotools_prop_first\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"last\\";a:7:{s:4:\\"name\\";s:4:\\"last\\";s:4:\\"desc\\";s:18:\\"pdotools_prop_last\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tplFirst\\";a:7:{s:4:\\"name\\";s:8:\\"tplFirst\\";s:4:\\"desc\\";s:22:\\"pdotools_prop_tplFirst\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplLast\\";a:7:{s:4:\\"name\\";s:7:\\"tplLast\\";s:4:\\"desc\\";s:21:\\"pdotools_prop_tplLast\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"tplOdd\\";a:7:{s:4:\\"name\\";s:6:\\"tplOdd\\";s:4:\\"desc\\";s:20:\\"pdotools_prop_tplOdd\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"tplWrapper\\";a:7:{s:4:\\"name\\";s:10:\\"tplWrapper\\";s:4:\\"desc\\";s:24:\\"pdotools_prop_tplWrapper\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"wrapIfEmpty\\";a:7:{s:4:\\"name\\";s:11:\\"wrapIfEmpty\\";s:4:\\"desc\\";s:25:\\"pdotools_prop_wrapIfEmpty\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"totalVar\\";a:7:{s:4:\\"name\\";s:8:\\"totalVar\\";s:4:\\"desc\\";s:22:\\"pdotools_prop_totalVar\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:5:\\"total\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"tplCondition\\";a:7:{s:4:\\"name\\";s:12:\\"tplCondition\\";s:4:\\"desc\\";s:26:\\"pdotools_prop_tplCondition\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"tplOperator\\";a:7:{s:4:\\"name\\";s:11:\\"tplOperator\\";s:4:\\"desc\\";s:25:\\"pdotools_prop_tplOperator\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:10:{i:0;a:2:{s:4:\\"text\\";s:11:\\"is equal to\\";s:5:\\"value\\";s:2:\\"==\\";}i:1;a:2:{s:4:\\"text\\";s:15:\\"is not equal to\\";s:5:\\"value\\";s:2:\\"!=\\";}i:2;a:2:{s:4:\\"text\\";s:9:\\"less than\\";s:5:\\"value\\";s:1:\\"<\\";}i:3;a:2:{s:4:\\"text\\";s:21:\\"less than or equal to\\";s:5:\\"value\\";s:2:\\"<=\\";}i:4;a:2:{s:4:\\"text\\";s:24:\\"greater than or equal to\\";s:5:\\"value\\";s:2:\\">=\\";}i:5;a:2:{s:4:\\"text\\";s:8:\\"is empty\\";s:5:\\"value\\";s:5:\\"empty\\";}i:6;a:2:{s:4:\\"text\\";s:12:\\"is not empty\\";s:5:\\"value\\";s:6:\\"!empty\\";}i:7;a:2:{s:4:\\"text\\";s:7:\\"is null\\";s:5:\\"value\\";s:4:\\"null\\";}i:8;a:2:{s:4:\\"text\\";s:11:\\"is in array\\";s:5:\\"value\\";s:7:\\"inarray\\";}i:9;a:2:{s:4:\\"text\\";s:10:\\"is between\\";s:5:\\"value\\";s:7:\\"between\\";}}s:5:\\"value\\";s:2:\\"==\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"conditionalTpls\\";a:7:{s:4:\\"name\\";s:15:\\"conditionalTpls\\";s:4:\\"desc\\";s:29:\\"pdotools_prop_conditionalTpls\\";s:4:\\"type\\";s:8:\\"textarea\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"select\\";a:7:{s:4:\\"name\\";s:6:\\"select\\";s:4:\\"desc\\";s:20:\\"pdotools_prop_select\\";s:4:\\"type\\";s:8:\\"textarea\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"toSeparatePlaceholders\\";a:7:{s:4:\\"name\\";s:22:\\"toSeparatePlaceholders\\";s:4:\\"desc\\";s:36:\\"pdotools_prop_toSeparatePlaceholders\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/pdotools\\/elements\\/snippets\\/snippet.pdousers.php","content":"\\/** @var array $scriptProperties *\\/\\n\\/** @var pdoFetch $pdoFetch *\\/\\n$fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\n$path = $modx->getOption(\'pdofetch_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\nif ($pdoClass = $modx->loadClass($fqn, $path, false, true)) {\\n    $pdoFetch = new $pdoClass($modx, $scriptProperties);\\n} else {\\n    return false;\\n}\\n$pdoFetch->addTime(\'pdoTools loaded\');\\n\\n$class = \'modUser\';\\n$profile = \'modUserProfile\';\\n$member = \'modUserGroupMember\';\\n\\n\\/\\/ Start building \\"Where\\" expression\\n$where = array();\\nif (empty($showInactive)) {\\n    $where[$class . \'.active\'] = 1;\\n}\\nif (empty($showBlocked)) {\\n    $where[$profile . \'.blocked\'] = 0;\\n}\\n\\n\\/\\/ Add users profiles and groups\\n$innerJoin = array(\\n    $profile => array(\'alias\' => $profile, \'on\' => \\"$class.id = $profile.internalKey\\"),\\n);\\n\\n\\/\\/ Filter by users, groups and roles\\n$tmp = array(\\n    \'users\' => array(\\n        \'class\' => $class,\\n        \'name\' => \'username\',\\n        \'join\' => $class . \'.id\',\\n    ),\\n    \'groups\' => array(\\n        \'class\' => \'modUserGroup\',\\n        \'name\' => \'name\',\\n        \'join\' => $member . \'.user_group\',\\n    ),\\n    \'roles\' => array(\\n        \'class\' => \'modUserGroupRole\',\\n        \'name\' => \'name\',\\n        \'join\' => $member . \'.role\',\\n    ),\\n);\\nforeach ($tmp as $k => $p) {\\n    if (!empty($$k)) {\\n        $$k = array_map(\'trim\', explode(\',\', $$k));\\n        ${$k . \'_in\'} = ${$k . \'_out\'} = $fetch_in = $fetch_out = array();\\n        foreach ($$k as $v) {\\n            if (is_numeric($v)) {\\n                if ($v[0] == \'-\') {\\n                    ${$k . \'_out\'}[] = abs($v);\\n                } else {\\n                    ${$k . \'_in\'}[] = abs($v);\\n                }\\n            } else {\\n                if ($v[0] == \'-\') {\\n                    $fetch_out[] = $v;\\n                } else {\\n                    $fetch_in[] = $v;\\n                }\\n            }\\n        }\\n\\n        if (!empty($fetch_in) || !empty($fetch_out)) {\\n            $q = $modx->newQuery($p[\'class\'], array($p[\'name\'] . \':IN\' => array_merge($fetch_in, $fetch_out)));\\n            $q->select(\'id,\' . $p[\'name\']);\\n            $tstart = microtime(true);\\n            if ($q->prepare() && $q->stmt->execute()) {\\n                $modx->queryTime += microtime(true) - $tstart;\\n                $modx->executedQueries++;\\n                while ($row = $q->stmt->fetch(PDO::FETCH_ASSOC)) {\\n                    if (in_array($row[$p[\'name\']], $fetch_in)) {\\n                        ${$k . \'_in\'}[] = $row[\'id\'];\\n                    } else {\\n                        ${$k . \'_out\'}[] = $row[\'id\'];\\n                    }\\n                }\\n            }\\n        }\\n\\n        if (!empty(${$k . \'_in\'})) {\\n            $where[$p[\'join\'] . \':IN\'] = ${$k . \'_in\'};\\n        }\\n        if (!empty(${$k . \'_out\'})) {\\n            $where[$p[\'join\'] . \':NOT IN\'] = ${$k . \'_out\'};\\n        }\\n    }\\n}\\n\\nif (!empty($groups_in) || !empty($groups_out) || !empty($roles_in) || !empty($roles_out)) {\\n    $innerJoin[$member] = array(\'alias\' => $member, \'on\' => \\"$class.id = $member.member\\");\\n}\\n\\n\\/\\/ Fields to select\\n$select = array(\\n    $profile => implode(\',\', array_keys($modx->getFieldMeta($profile))),\\n    $class => implode(\',\', array_keys($modx->getFieldMeta($class))),\\n);\\n\\n\\/\\/ Add custom parameters\\nforeach (array(\'where\', \'innerJoin\', \'select\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = $scriptProperties[$v];\\n        if (!is_array($tmp)) {\\n            $tmp = json_decode($tmp, true);\\n        }\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n$pdoFetch->addTime(\'Conditions prepared\');\\n\\n$default = array(\\n    \'class\' => $class,\\n    \'innerJoin\' => json_encode($innerJoin),\\n    \'where\' => json_encode($where),\\n    \'select\' => json_encode($select),\\n    \'groupby\' => $class . \'.id\',\\n    \'sortby\' => $class . \'.id\',\\n    \'sortdir\' => \'ASC\',\\n    \'fastMode\' => false,\\n    \'return\' => !empty($returnIds) ? \'ids\' : \'chunks\',\\n    \'disableConditions\' => true,\\n);\\n\\nif (!empty($users_in) && (empty($scriptProperties[\'sortby\']) || $scriptProperties[\'sortby\'] == $class . \'.id\')) {\\n    $scriptProperties[\'sortby\'] = \\"find_in_set(`$class`.`id`,\'\\" . implode(\',\', $users_in) . \\"\')\\";\\n    $scriptProperties[\'sortdir\'] = \'\';\\n}\\n\\n\\/\\/ Merge all properties and run!\\n$pdoFetch->addTime(\'Query parameters ready\');\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\n$output = $pdoFetch->run();\\n\\n$log = \'\';\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n    $log .= \'<pre class=\\"pdoUsersLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\n\\/\\/ Return output\\nif (!empty($returnIds)) {\\n    $modx->setPlaceholder(\'pdoUsers.log\', $log);\\n    if (!empty($toPlaceholder)) {\\n        $modx->setPlaceholder($toPlaceholder, $output);\\n    } else {\\n        return $output;\\n    }\\n} elseif (!empty($toSeparatePlaceholders)) {\\n    $output[\'log\'] = $log;\\n    $modx->setPlaceholders($output, $toSeparatePlaceholders);\\n} else {\\n    $output .= $log;\\n\\n    if (!empty($tplWrapper) && (!empty($wrapIfEmpty) || !empty($output))) {\\n        $output = $pdoFetch->getChunk($tplWrapper, array(\'output\' => $output), $pdoFetch->config[\'fastMode\']);\\n    }\\n\\n    if (!empty($toPlaceholder)) {\\n        $modx->setPlaceholder($toPlaceholder, $output);\\n    } else {\\n        return $output;\\n    }\\n}"}',
);