<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'b2e0757f99bcbe0628051d4abaf44b82',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '4f0dd98acf5791048d1f2dca56edbee2',
  'native_key' => 45,
  'object' => '{"id":45,"source":0,"property_preprocess":0,"name":"FormItAutoResponder","description":"Custom hook for FormIt to handle Auto-Response emails.","editor_type":0,"category":11,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * A custom FormIt hook for auto-responders.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var FormIt $formit\\n * @var fiHooks $hook\\n * \\n * @package formit\\n *\\/\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'fiarTpl\',$scriptProperties,\'fiDefaultFiarTpl\');\\n$mailFrom = $modx->getOption(\'fiarFrom\',$scriptProperties,$modx->getOption(\'emailsender\'));\\n$mailFromName = $modx->getOption(\'fiarFromName\',$scriptProperties,$modx->getOption(\'site_name\'));\\n$mailSender = $modx->getOption(\'fiarSender\',$scriptProperties,$modx->getOption(\'emailsender\'));\\n$mailSubject = $modx->getOption(\'fiarSubject\',$scriptProperties,\'[[++site_name]] Auto-Responder\');\\n$mailSubject = str_replace(array(\'[[++site_name]]\',\'[[++emailsender]]\'),array($modx->getOption(\'site_name\'),$modx->getOption(\'emailsender\')),$mailSubject);\\n$fiarFiles = $modx->getOption(\'fiarFiles\',$scriptProperties,false);\\n$isHtml = $modx->getOption(\'fiarHtml\',$scriptProperties,true);\\n$toField = $modx->getOption(\'fiarToField\',$scriptProperties,\'email\');\\n$multiSeparator = $modx->getOption(\'fiarMultiSeparator\',$formit->config,\\"\\\\n\\");\\n$multiWrapper = $modx->getOption(\'fiarMultiWrapper\',$formit->config,\\"[[+value]]\\");\\n$required = $modx->getOption(\'fiarRequired\',$scriptProperties,true);\\nif (empty($fields[$toField])) {\\n    if ($required) {\\n        $modx->log(modX::LOG_LEVEL_ERROR,\'[FormIt] Auto-responder could not find field `\'.$toField.\'` in form submission.\');\\n        return false;\\n    } else {\\n        return true;\\n    }\\n}\\n\\n\\/* handle checkbox and array fields *\\/\\nforeach ($fields as $k => $v) {\\n    if (is_array($v) && !empty($v[\'name\']) && isset($v[\'error\']) && $v[\'error\'] == UPLOAD_ERR_OK) {\\n        $fields[$k] = $v[\'name\'];\\n    } elseif (is_array($v)) {\\n        $vOpts = array();\\n        foreach ($v as $vKey => $vValue) {\\n            if (is_string($vKey) && !empty($vKey)) {\\n                $vKey = $k.\'.\'.$vKey;\\n                $fields[$vKey] = $vValue;\\n            } else {\\n                $vOpts[] = str_replace(\'[[+value]]\', $vValue, $multiWrapper);\\n            }\\n        }\\n        $newValue = implode($multiSeparator, $vOpts);\\n        if (!empty($vOpts)) {\\n            $fields[$k] = $newValue;\\n        }\\n    }\\n}\\n\\n\\/* setup placeholders *\\/\\n$placeholders = $fields;\\n$mailTo= $fields[$toField];\\n\\n$message = $formit->getChunk($tpl,$placeholders);\\n$modx->parser->processElementTags(\'\',$message,true,false);\\n\\n$modx->getService(\'mail\', \'mail.modPHPMailer\');\\n$modx->mail->reset();\\n$modx->mail->set(modMail::MAIL_BODY,$message);\\n$modx->mail->set(modMail::MAIL_FROM,$hook->_process($mailFrom,$placeholders));\\n$modx->mail->set(modMail::MAIL_FROM_NAME,$hook->_process($mailFromName,$placeholders));\\n$modx->mail->set(modMail::MAIL_SENDER,$hook->_process($mailSender,$placeholders));\\n$modx->mail->set(modMail::MAIL_SUBJECT,$hook->_process($mailSubject,$placeholders));\\n$modx->mail->address(\'to\',$mailTo);\\n$modx->mail->setHTML($isHtml);\\n\\n\\/* add attachments *\\/\\nif($fiarFiles){\\n    $fiarFiles = explode(\',\', $fiarFiles);\\n    foreach($fiarFiles AS $file){\\n        $modx->mail->mailer->AddAttachment($file);\\n    }\\n}\\n\\n\\/* reply to *\\/\\n$emailReplyTo = $modx->getOption(\'fiarReplyTo\',$scriptProperties,$mailFrom);\\n$emailReplyTo = $hook->_process($emailReplyTo,$fields);\\n$emailReplyToName = $modx->getOption(\'fiarReplyToName\',$scriptProperties,$mailFromName);\\n$emailReplyToName = $hook->_process($emailReplyToName,$fields);\\nif (!empty($emailReplyTo)) {\\n    $modx->mail->address(\'reply-to\',$emailReplyTo,$emailReplyToName);\\n}\\n\\n\\/* cc *\\/\\n$emailCC = $modx->getOption(\'fiarCC\',$scriptProperties,\'\');\\nif (!empty($emailCC)) {\\n    $emailCCName = $modx->getOption(\'fiarCCName\',$scriptProperties,\'\');\\n    $emailCC = explode(\',\',$emailCC);\\n    $emailCCName = explode(\',\',$emailCCName);\\n    $numAddresses = count($emailCC);\\n    for ($i=0;$i<$numAddresses;$i++) {\\n        $etn = !empty($emailCCName[$i]) ? $emailCCName[$i] : \'\';\\n        if (!empty($etn)) $etn = $hook->_process($etn,$fields);\\n        $emailCC[$i] = $hook->_process($emailCC[$i],$fields);\\n        if (!empty($emailCC[$i])) {\\n            $modx->mail->address(\'cc\',$emailCC[$i],$etn);\\n        }\\n    }\\n}\\n\\n\\/* bcc *\\/\\n$emailBCC = $modx->getOption(\'fiarBCC\',$scriptProperties,\'\');\\nif (!empty($emailBCC)) {\\n    $emailBCCName = $modx->getOption(\'fiarBCCName\',$scriptProperties,\'\');\\n    $emailBCC = explode(\',\',$emailBCC);\\n    $emailBCCName = explode(\',\',$emailBCCName);\\n    $numAddresses = count($emailBCC);\\n    for ($i=0;$i<$numAddresses;$i++) {\\n        $etn = !empty($emailBCCName[$i]) ? $emailBCCName[$i] : \'\';\\n        if (!empty($etn)) $etn = $hook->_process($etn,$fields);\\n        $emailBCC[$i] = $hook->_process($emailBCC[$i],$fields);\\n        if (!empty($emailBCC[$i])) {\\n            $modx->mail->address(\'bcc\',$emailBCC[$i],$etn);\\n        }\\n    }\\n}\\n\\nif (!$formit->inTestMode) {\\n    if (!$modx->mail->send()) {\\n        $modx->log(modX::LOG_LEVEL_ERROR,\'[FormIt] An error occurred while trying to send the auto-responder email: \'.$modx->mail->mailer->ErrorInfo);\\n        return false;\\n    }\\n}\\n$modx->mail->reset();\\nreturn true;","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * A custom FormIt hook for auto-responders.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var FormIt $formit\\n * @var fiHooks $hook\\n * \\n * @package formit\\n *\\/\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'fiarTpl\',$scriptProperties,\'fiDefaultFiarTpl\');\\n$mailFrom = $modx->getOption(\'fiarFrom\',$scriptProperties,$modx->getOption(\'emailsender\'));\\n$mailFromName = $modx->getOption(\'fiarFromName\',$scriptProperties,$modx->getOption(\'site_name\'));\\n$mailSender = $modx->getOption(\'fiarSender\',$scriptProperties,$modx->getOption(\'emailsender\'));\\n$mailSubject = $modx->getOption(\'fiarSubject\',$scriptProperties,\'[[++site_name]] Auto-Responder\');\\n$mailSubject = str_replace(array(\'[[++site_name]]\',\'[[++emailsender]]\'),array($modx->getOption(\'site_name\'),$modx->getOption(\'emailsender\')),$mailSubject);\\n$fiarFiles = $modx->getOption(\'fiarFiles\',$scriptProperties,false);\\n$isHtml = $modx->getOption(\'fiarHtml\',$scriptProperties,true);\\n$toField = $modx->getOption(\'fiarToField\',$scriptProperties,\'email\');\\n$multiSeparator = $modx->getOption(\'fiarMultiSeparator\',$formit->config,\\"\\\\n\\");\\n$multiWrapper = $modx->getOption(\'fiarMultiWrapper\',$formit->config,\\"[[+value]]\\");\\n$required = $modx->getOption(\'fiarRequired\',$scriptProperties,true);\\nif (empty($fields[$toField])) {\\n    if ($required) {\\n        $modx->log(modX::LOG_LEVEL_ERROR,\'[FormIt] Auto-responder could not find field `\'.$toField.\'` in form submission.\');\\n        return false;\\n    } else {\\n        return true;\\n    }\\n}\\n\\n\\/* handle checkbox and array fields *\\/\\nforeach ($fields as $k => $v) {\\n    if (is_array($v) && !empty($v[\'name\']) && isset($v[\'error\']) && $v[\'error\'] == UPLOAD_ERR_OK) {\\n        $fields[$k] = $v[\'name\'];\\n    } elseif (is_array($v)) {\\n        $vOpts = array();\\n        foreach ($v as $vKey => $vValue) {\\n            if (is_string($vKey) && !empty($vKey)) {\\n                $vKey = $k.\'.\'.$vKey;\\n                $fields[$vKey] = $vValue;\\n            } else {\\n                $vOpts[] = str_replace(\'[[+value]]\', $vValue, $multiWrapper);\\n            }\\n        }\\n        $newValue = implode($multiSeparator, $vOpts);\\n        if (!empty($vOpts)) {\\n            $fields[$k] = $newValue;\\n        }\\n    }\\n}\\n\\n\\/* setup placeholders *\\/\\n$placeholders = $fields;\\n$mailTo= $fields[$toField];\\n\\n$message = $formit->getChunk($tpl,$placeholders);\\n$modx->parser->processElementTags(\'\',$message,true,false);\\n\\n$modx->getService(\'mail\', \'mail.modPHPMailer\');\\n$modx->mail->reset();\\n$modx->mail->set(modMail::MAIL_BODY,$message);\\n$modx->mail->set(modMail::MAIL_FROM,$hook->_process($mailFrom,$placeholders));\\n$modx->mail->set(modMail::MAIL_FROM_NAME,$hook->_process($mailFromName,$placeholders));\\n$modx->mail->set(modMail::MAIL_SENDER,$hook->_process($mailSender,$placeholders));\\n$modx->mail->set(modMail::MAIL_SUBJECT,$hook->_process($mailSubject,$placeholders));\\n$modx->mail->address(\'to\',$mailTo);\\n$modx->mail->setHTML($isHtml);\\n\\n\\/* add attachments *\\/\\nif($fiarFiles){\\n    $fiarFiles = explode(\',\', $fiarFiles);\\n    foreach($fiarFiles AS $file){\\n        $modx->mail->mailer->AddAttachment($file);\\n    }\\n}\\n\\n\\/* reply to *\\/\\n$emailReplyTo = $modx->getOption(\'fiarReplyTo\',$scriptProperties,$mailFrom);\\n$emailReplyTo = $hook->_process($emailReplyTo,$fields);\\n$emailReplyToName = $modx->getOption(\'fiarReplyToName\',$scriptProperties,$mailFromName);\\n$emailReplyToName = $hook->_process($emailReplyToName,$fields);\\nif (!empty($emailReplyTo)) {\\n    $modx->mail->address(\'reply-to\',$emailReplyTo,$emailReplyToName);\\n}\\n\\n\\/* cc *\\/\\n$emailCC = $modx->getOption(\'fiarCC\',$scriptProperties,\'\');\\nif (!empty($emailCC)) {\\n    $emailCCName = $modx->getOption(\'fiarCCName\',$scriptProperties,\'\');\\n    $emailCC = explode(\',\',$emailCC);\\n    $emailCCName = explode(\',\',$emailCCName);\\n    $numAddresses = count($emailCC);\\n    for ($i=0;$i<$numAddresses;$i++) {\\n        $etn = !empty($emailCCName[$i]) ? $emailCCName[$i] : \'\';\\n        if (!empty($etn)) $etn = $hook->_process($etn,$fields);\\n        $emailCC[$i] = $hook->_process($emailCC[$i],$fields);\\n        if (!empty($emailCC[$i])) {\\n            $modx->mail->address(\'cc\',$emailCC[$i],$etn);\\n        }\\n    }\\n}\\n\\n\\/* bcc *\\/\\n$emailBCC = $modx->getOption(\'fiarBCC\',$scriptProperties,\'\');\\nif (!empty($emailBCC)) {\\n    $emailBCCName = $modx->getOption(\'fiarBCCName\',$scriptProperties,\'\');\\n    $emailBCC = explode(\',\',$emailBCC);\\n    $emailBCCName = explode(\',\',$emailBCCName);\\n    $numAddresses = count($emailBCC);\\n    for ($i=0;$i<$numAddresses;$i++) {\\n        $etn = !empty($emailBCCName[$i]) ? $emailBCCName[$i] : \'\';\\n        if (!empty($etn)) $etn = $hook->_process($etn,$fields);\\n        $emailBCC[$i] = $hook->_process($emailBCC[$i],$fields);\\n        if (!empty($emailBCC[$i])) {\\n            $modx->mail->address(\'bcc\',$emailBCC[$i],$etn);\\n        }\\n    }\\n}\\n\\nif (!$formit->inTestMode) {\\n    if (!$modx->mail->send()) {\\n        $modx->log(modX::LOG_LEVEL_ERROR,\'[FormIt] An error occurred while trying to send the auto-responder email: \'.$modx->mail->mailer->ErrorInfo);\\n        return false;\\n    }\\n}\\n$modx->mail->reset();\\nreturn true;"}',
);