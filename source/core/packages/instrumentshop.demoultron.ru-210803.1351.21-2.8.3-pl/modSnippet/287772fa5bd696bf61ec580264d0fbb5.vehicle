<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'ef9cb966204338076912f95dbd36564c',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '287772fa5bd696bf61ec580264d0fbb5',
  'native_key' => 58,
  'object' => '{"id":58,"source":1,"property_preprocess":0,"name":"pdoNeighbors","description":"","editor_type":0,"category":12,"cache_type":0,"snippet":"\\/** @var array $scriptProperties *\\/\\n\\/** @var pdoFetch $pdoFetch *\\/\\n$fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\n$path = $modx->getOption(\'pdofetch_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\nif ($pdoClass = $modx->loadClass($fqn, $path, false, true)) {\\n    $pdoFetch = new $pdoClass($modx, $scriptProperties);\\n} else {\\n    return false;\\n}\\n$pdoFetch->addTime(\'pdoTools loaded\');\\n\\nif (empty($id)) {\\n    $id = $modx->resource->id;\\n}\\nif (empty($limit)) {\\n    $limit = 1;\\n}\\nif (!isset($outputSeparator)) {\\n    $outputSeparator = \\"\\\\n\\";\\n}\\n$fastMode = !empty($fastMode);\\n\\n$class = \'modResource\';\\n$resource = ($id == $modx->resource->id)\\n    ? $modx->resource\\n    : $modx->getObject($class, $id);\\nif (!$resource) {\\n    return \'\';\\n}\\n\\n\\/\\/ We need to determine ids of neighbors\\n$params = $scriptProperties;\\n$params[\'select\'] = \'id\';\\n$params[\'limit\'] = 0;\\nif (!empty($parents) && is_string($parents)) {\\n    $parents = array_map(\'trim\', explode(\',\', $parents));\\n    if (!in_array($resource->parent, $parents)) {\\n        $parents[] = $resource->parent;\\n    }\\n    $key = array_search($resource->parent * -1, $parents);\\n    if ($key !== false) {\\n        unset($parents[$key]);\\n    }\\n    $params[\'parents\'] = implode(\',\', $parents);\\n    $ids = $pdoFetch->getCollection(\'modResource\', array(), $params);\\n    unset($scriptProperties[\'parents\']);\\n} else {\\n    $ids = $pdoFetch->getCollection(\'modResource\', array(\'parent\' => $resource->parent), $params);\\n}\\n\\n$found = false;\\n$prev = $next = array();\\nforeach ($ids as $v) {\\n    if ($v[\'id\'] == $id) {\\n        $found = true;\\n        continue;\\n    } elseif (!$found) {\\n        $prev[] = $v[\'id\'];\\n    } else {\\n        $next[] = $v[\'id\'];\\n        if (count($next) >= $limit) {\\n            break;\\n        }\\n    }\\n}\\n$prev = array_splice($prev, $limit * -1);\\nif (!empty($loop)) {\\n    if (!count($prev)) {\\n        $v = end($ids);\\n        $prev[] = $v[\'id\'];\\n    } else {\\n        if (!count($next)) {\\n            $v = reset($ids);\\n            $next[] = $v[\'id\'];\\n        }\\n    }\\n}\\n$ids = array_merge($prev, $next, array($resource->parent));\\n$pdoFetch->addTime(\'Found ids of neighbors: \' . implode(\',\', $ids));\\n\\n\\/\\/ Query conditions\\n$where = array($class . \'.id:IN\' => $ids);\\n\\n\\/\\/ Fields to select\\n$resourceColumns = array_keys($modx->getFieldMeta($class));\\nif (empty($includeContent) && empty($useWeblinkUrl)) {\\n    $key = array_search(\'content\', $resourceColumns);\\n    unset($resourceColumns[$key]);\\n}\\n$select = array($class => implode(\',\', $resourceColumns));\\n\\n\\/\\/ Add custom parameters\\nforeach (array(\'where\', \'select\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = $scriptProperties[$v];\\n        if (!is_array($tmp)) {\\n            $tmp = json_decode($tmp, true);\\n        }\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n$pdoFetch->addTime(\'Conditions prepared\');\\n\\n\\/\\/ Default parameters\\n$default = array(\\n    \'class\' => $class,\\n    \'where\' => json_encode($where),\\n    \'select\' => json_encode($select),\\n    \\/\\/\'groupby\' => $class.\'.id\',\\n    \'sortby\' => $class . \'.menuindex\',\\n    \'sortdir\' => \'ASC\',\\n    \'return\' => \'data\',\\n    \'limit\' => 0,\\n    \'totalVar\' => \'pdoneighbors.total\',\\n);\\n\\n\\/\\/ Merge all properties and run!\\nunset($scriptProperties[\'limit\']);\\n$pdoFetch->addTime(\'Query parameters ready\');\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\n\\n$rows = $pdoFetch->run();\\n$prev = array_flip($prev);\\n$next = array_flip($next);\\n\\n$output = array(\'prev\' => array(), \'up\' => array(), \'next\' => array());\\nforeach ($rows as $row) {\\n    if (empty($row[\'menutitle\'])) {\\n        $row[\'menutitle\'] = $row[\'pagetitle\'];\\n    }\\n    if (!empty($useWeblinkUrl) && $row[\'class_key\'] == \'modWebLink\') {\\n        $row[\'link\'] = is_numeric(trim($row[\'content\'], \'[]~ \'))\\n            ? $pdoFetch->makeUrl(intval(trim($row[\'content\'], \'[]~ \')), $row)\\n            : $row[\'content\'];\\n    } else {\\n        $row[\'link\'] = $pdoFetch->makeUrl($row[\'id\'], $row);\\n    }\\n\\n    if (isset($prev[$row[\'id\']])) {\\n        $output[\'prev\'][] = !empty($tplPrev)\\n            ? $pdoFetch->getChunk($tplPrev, $row, $fastMode)\\n            : $pdoFetch->getChunk(\'\', $row);\\n    } elseif (isset($next[$row[\'id\']])) {\\n        $output[\'next\'][] = !empty($tplNext)\\n            ? $pdoFetch->getChunk($tplNext, $row, $fastMode)\\n            : $pdoFetch->getChunk(\'\', $row);\\n    } else {\\n        $output[\'up\'][] = !empty($tplUp)\\n            ? $pdoFetch->getChunk($tplUp, $row, $fastMode)\\n            : $pdoFetch->getChunk(\'\', $row);\\n    }\\n}\\n$pdoFetch->addTime(\'Chunks processed\');\\n\\n$log = \'\';\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n    $log .= \'<pre class=\\"pdoNeighborsLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\nforeach ($output as &$row) {\\n    $row = implode($outputSeparator, $row);\\n}\\n\\nif (!empty($toSeparatePlaceholders)) {\\n    $output[\'log\'] = $log;\\n    $modx->setPlaceholders($output, $toSeparatePlaceholders);\\n} else {\\n    if (!empty($rows) || !empty($wrapIfEmpty)) {\\n        $output = !empty($tplWrapper)\\n            ? $pdoFetch->getChunk($tplWrapper, $output, $fastMode)\\n            : $pdoFetch->getChunk(\'\', $output);\\n    } else {\\n        $output = \'\';\\n    }\\n    $output .= $log;\\n\\n    if (!empty($toPlaceholder)) {\\n        $modx->setPlaceholder($toPlaceholder, $output);\\n    } else {\\n        return $output;\\n    }\\n}","locked":0,"properties":"a:27:{s:2:\\"id\\";a:7:{s:4:\\"name\\";s:2:\\"id\\";s:4:\\"desc\\";s:16:\\"pdotools_prop_id\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:29:\\"pdotools_prop_neighbors_limit\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:1;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:20:\\"pdotools_prop_sortby\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:9:\\"menuindex\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:21:\\"pdotools_prop_sortdir\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"asc\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"depth\\";a:7:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:19:\\"pdotools_prop_depth\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplPrev\\";a:7:{s:4:\\"name\\";s:7:\\"tplPrev\\";s:4:\\"desc\\";s:21:\\"pdotools_prop_tplPrev\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:106:\\"@INLINE <span class=\\"link-prev\\"><a href=\\"[[+link]]\\" class=\\"btn btn-light\\">&larr; [[+menutitle]]<\\/a><\\/span>\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"tplUp\\";a:7:{s:4:\\"name\\";s:5:\\"tplUp\\";s:4:\\"desc\\";s:19:\\"pdotools_prop_tplUp\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:104:\\"@INLINE <span class=\\"link-up\\"><a href=\\"[[+link]]\\" class=\\"btn btn-light\\">&uarr; [[+menutitle]]<\\/a><\\/span>\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplNext\\";a:7:{s:4:\\"name\\";s:7:\\"tplNext\\";s:4:\\"desc\\";s:21:\\"pdotools_prop_tplNext\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:106:\\"@INLINE <span class=\\"link-next\\"><a href=\\"[[+link]]\\" class=\\"btn btn-light\\">[[+menutitle]] &rarr;<\\/a><\\/span>\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"tplWrapper\\";a:7:{s:4:\\"name\\";s:10:\\"tplWrapper\\";s:4:\\"desc\\";s:34:\\"pdotools_prop_neighbors_tplWrapper\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:93:\\"@INLINE <div class=\\"neighbors d-flex justify-content-between\\">[[+prev]][[+up]][[+next]]<\\/div>\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"wrapIfEmpty\\";a:7:{s:4:\\"name\\";s:11:\\"wrapIfEmpty\\";s:4:\\"desc\\";s:25:\\"pdotools_prop_wrapIfEmpty\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"showUnpublished\\";a:7:{s:4:\\"name\\";s:15:\\"showUnpublished\\";s:4:\\"desc\\";s:29:\\"pdotools_prop_showUnpublished\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"showDeleted\\";a:7:{s:4:\\"name\\";s:11:\\"showDeleted\\";s:4:\\"desc\\";s:25:\\"pdotools_prop_showDeleted\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"showHidden\\";a:7:{s:4:\\"name\\";s:10:\\"showHidden\\";s:4:\\"desc\\";s:24:\\"pdotools_prop_showHidden\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"hideContainers\\";a:7:{s:4:\\"name\\";s:14:\\"hideContainers\\";s:4:\\"desc\\";s:28:\\"pdotools_prop_hideContainers\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"toSeparatePlaceholders\\";a:7:{s:4:\\"name\\";s:22:\\"toSeparatePlaceholders\\";s:4:\\"desc\\";s:36:\\"pdotools_prop_toSeparatePlaceholders\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:27:\\"pdotools_prop_toPlaceholder\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"parents\\";a:7:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:21:\\"pdotools_prop_parents\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"outputSeparator\\";a:7:{s:4:\\"name\\";s:15:\\"outputSeparator\\";s:4:\\"desc\\";s:29:\\"pdotools_prop_outputSeparator\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:1:\\"\\n\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:21:\\"pdotools_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"fastMode\\";a:7:{s:4:\\"name\\";s:8:\\"fastMode\\";s:4:\\"desc\\";s:22:\\"pdotools_prop_fastMode\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"includeTVs\\";a:7:{s:4:\\"name\\";s:10:\\"includeTVs\\";s:4:\\"desc\\";s:24:\\"pdotools_prop_includeTVs\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"prepareTVs\\";a:7:{s:4:\\"name\\";s:10:\\"prepareTVs\\";s:4:\\"desc\\";s:24:\\"pdotools_prop_prepareTVs\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:1:\\"1\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"processTVs\\";a:7:{s:4:\\"name\\";s:10:\\"processTVs\\";s:4:\\"desc\\";s:24:\\"pdotools_prop_processTVs\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tvPrefix\\";a:7:{s:4:\\"name\\";s:8:\\"tvPrefix\\";s:4:\\"desc\\";s:22:\\"pdotools_prop_tvPrefix\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"tv.\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"scheme\\";a:7:{s:4:\\"name\\";s:6:\\"scheme\\";s:4:\\"desc\\";s:20:\\"pdotools_prop_scheme\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:6:{i:0;a:2:{s:5:\\"value\\";s:0:\\"\\";s:4:\\"text\\";s:14:\\"System default\\";}i:1;a:2:{s:5:\\"value\\";i:-1;s:4:\\"text\\";s:25:\\"-1 (relative to site_url)\\";}i:2;a:2:{s:5:\\"value\\";s:4:\\"full\\";s:4:\\"text\\";s:40:\\"full (absolute, prepended with site_url)\\";}i:3;a:2:{s:5:\\"value\\";s:3:\\"abs\\";s:4:\\"text\\";s:39:\\"abs (absolute, prepended with base_url)\\";}i:4;a:2:{s:5:\\"value\\";s:4:\\"http\\";s:4:\\"text\\";s:38:\\"http (absolute, forced to http scheme)\\";}i:5;a:2:{s:5:\\"value\\";s:5:\\"https\\";s:4:\\"text\\";s:40:\\"https (absolute, forced to https scheme)\\";}}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"useWeblinkUrl\\";a:7:{s:4:\\"name\\";s:13:\\"useWeblinkUrl\\";s:4:\\"desc\\";s:27:\\"pdotools_prop_useWeblinkUrl\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"loop\\";a:7:{s:4:\\"name\\";s:4:\\"loop\\";s:4:\\"desc\\";s:18:\\"pdotools_prop_loop\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:19:\\"pdotools:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/pdotools\\/elements\\/snippets\\/snippet.pdoneighbors.php","content":"\\/** @var array $scriptProperties *\\/\\n\\/** @var pdoFetch $pdoFetch *\\/\\n$fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\n$path = $modx->getOption(\'pdofetch_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\nif ($pdoClass = $modx->loadClass($fqn, $path, false, true)) {\\n    $pdoFetch = new $pdoClass($modx, $scriptProperties);\\n} else {\\n    return false;\\n}\\n$pdoFetch->addTime(\'pdoTools loaded\');\\n\\nif (empty($id)) {\\n    $id = $modx->resource->id;\\n}\\nif (empty($limit)) {\\n    $limit = 1;\\n}\\nif (!isset($outputSeparator)) {\\n    $outputSeparator = \\"\\\\n\\";\\n}\\n$fastMode = !empty($fastMode);\\n\\n$class = \'modResource\';\\n$resource = ($id == $modx->resource->id)\\n    ? $modx->resource\\n    : $modx->getObject($class, $id);\\nif (!$resource) {\\n    return \'\';\\n}\\n\\n\\/\\/ We need to determine ids of neighbors\\n$params = $scriptProperties;\\n$params[\'select\'] = \'id\';\\n$params[\'limit\'] = 0;\\nif (!empty($parents) && is_string($parents)) {\\n    $parents = array_map(\'trim\', explode(\',\', $parents));\\n    if (!in_array($resource->parent, $parents)) {\\n        $parents[] = $resource->parent;\\n    }\\n    $key = array_search($resource->parent * -1, $parents);\\n    if ($key !== false) {\\n        unset($parents[$key]);\\n    }\\n    $params[\'parents\'] = implode(\',\', $parents);\\n    $ids = $pdoFetch->getCollection(\'modResource\', array(), $params);\\n    unset($scriptProperties[\'parents\']);\\n} else {\\n    $ids = $pdoFetch->getCollection(\'modResource\', array(\'parent\' => $resource->parent), $params);\\n}\\n\\n$found = false;\\n$prev = $next = array();\\nforeach ($ids as $v) {\\n    if ($v[\'id\'] == $id) {\\n        $found = true;\\n        continue;\\n    } elseif (!$found) {\\n        $prev[] = $v[\'id\'];\\n    } else {\\n        $next[] = $v[\'id\'];\\n        if (count($next) >= $limit) {\\n            break;\\n        }\\n    }\\n}\\n$prev = array_splice($prev, $limit * -1);\\nif (!empty($loop)) {\\n    if (!count($prev)) {\\n        $v = end($ids);\\n        $prev[] = $v[\'id\'];\\n    } else {\\n        if (!count($next)) {\\n            $v = reset($ids);\\n            $next[] = $v[\'id\'];\\n        }\\n    }\\n}\\n$ids = array_merge($prev, $next, array($resource->parent));\\n$pdoFetch->addTime(\'Found ids of neighbors: \' . implode(\',\', $ids));\\n\\n\\/\\/ Query conditions\\n$where = array($class . \'.id:IN\' => $ids);\\n\\n\\/\\/ Fields to select\\n$resourceColumns = array_keys($modx->getFieldMeta($class));\\nif (empty($includeContent) && empty($useWeblinkUrl)) {\\n    $key = array_search(\'content\', $resourceColumns);\\n    unset($resourceColumns[$key]);\\n}\\n$select = array($class => implode(\',\', $resourceColumns));\\n\\n\\/\\/ Add custom parameters\\nforeach (array(\'where\', \'select\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = $scriptProperties[$v];\\n        if (!is_array($tmp)) {\\n            $tmp = json_decode($tmp, true);\\n        }\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n$pdoFetch->addTime(\'Conditions prepared\');\\n\\n\\/\\/ Default parameters\\n$default = array(\\n    \'class\' => $class,\\n    \'where\' => json_encode($where),\\n    \'select\' => json_encode($select),\\n    \\/\\/\'groupby\' => $class.\'.id\',\\n    \'sortby\' => $class . \'.menuindex\',\\n    \'sortdir\' => \'ASC\',\\n    \'return\' => \'data\',\\n    \'limit\' => 0,\\n    \'totalVar\' => \'pdoneighbors.total\',\\n);\\n\\n\\/\\/ Merge all properties and run!\\nunset($scriptProperties[\'limit\']);\\n$pdoFetch->addTime(\'Query parameters ready\');\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\n\\n$rows = $pdoFetch->run();\\n$prev = array_flip($prev);\\n$next = array_flip($next);\\n\\n$output = array(\'prev\' => array(), \'up\' => array(), \'next\' => array());\\nforeach ($rows as $row) {\\n    if (empty($row[\'menutitle\'])) {\\n        $row[\'menutitle\'] = $row[\'pagetitle\'];\\n    }\\n    if (!empty($useWeblinkUrl) && $row[\'class_key\'] == \'modWebLink\') {\\n        $row[\'link\'] = is_numeric(trim($row[\'content\'], \'[]~ \'))\\n            ? $pdoFetch->makeUrl(intval(trim($row[\'content\'], \'[]~ \')), $row)\\n            : $row[\'content\'];\\n    } else {\\n        $row[\'link\'] = $pdoFetch->makeUrl($row[\'id\'], $row);\\n    }\\n\\n    if (isset($prev[$row[\'id\']])) {\\n        $output[\'prev\'][] = !empty($tplPrev)\\n            ? $pdoFetch->getChunk($tplPrev, $row, $fastMode)\\n            : $pdoFetch->getChunk(\'\', $row);\\n    } elseif (isset($next[$row[\'id\']])) {\\n        $output[\'next\'][] = !empty($tplNext)\\n            ? $pdoFetch->getChunk($tplNext, $row, $fastMode)\\n            : $pdoFetch->getChunk(\'\', $row);\\n    } else {\\n        $output[\'up\'][] = !empty($tplUp)\\n            ? $pdoFetch->getChunk($tplUp, $row, $fastMode)\\n            : $pdoFetch->getChunk(\'\', $row);\\n    }\\n}\\n$pdoFetch->addTime(\'Chunks processed\');\\n\\n$log = \'\';\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n    $log .= \'<pre class=\\"pdoNeighborsLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\nforeach ($output as &$row) {\\n    $row = implode($outputSeparator, $row);\\n}\\n\\nif (!empty($toSeparatePlaceholders)) {\\n    $output[\'log\'] = $log;\\n    $modx->setPlaceholders($output, $toSeparatePlaceholders);\\n} else {\\n    if (!empty($rows) || !empty($wrapIfEmpty)) {\\n        $output = !empty($tplWrapper)\\n            ? $pdoFetch->getChunk($tplWrapper, $output, $fastMode)\\n            : $pdoFetch->getChunk(\'\', $output);\\n    } else {\\n        $output = \'\';\\n    }\\n    $output .= $log;\\n\\n    if (!empty($toPlaceholder)) {\\n        $modx->setPlaceholder($toPlaceholder, $output);\\n    } else {\\n        return $output;\\n    }\\n}"}',
);