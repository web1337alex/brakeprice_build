<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '759f070495d24db033d60180d484700f',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => 'b8dcefd316aaa10bf73bb423cdf3388f',
  'native_key' => 76,
  'object' => '{"id":76,"source":1,"property_preprocess":0,"name":"msGallery","description":"","editor_type":0,"category":22,"cache_type":0,"snippet":"\\/** @var modX $modx *\\/\\n\\/** @var array $scriptProperties *\\/\\n\\/** @var miniShop2 $miniShop2 *\\/\\n$miniShop2 = $modx->getService(\'miniShop2\');\\n$miniShop2->initialize($modx->context->key);\\n\\/** @var pdoFetch $pdoFetch *\\/\\n$fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\n$path = $modx->getOption(\'pdofetch_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\nif ($pdoClass = $modx->loadClass($fqn, $path, false, true)) {\\n    $pdoFetch = new $pdoClass($modx, $scriptProperties);\\n} else {\\n    return false;\\n}\\n$pdoFetch->addTime(\'pdoTools loaded.\');\\n\\n$extensionsDir = $modx->getOption(\'extensionsDir\', $scriptProperties, \'components\\/minishop2\\/img\\/mgr\\/extensions\\/\', true);\\n$limit = $modx->getOption(\'limit\', $scriptProperties, 0);\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'tpl.msGallery\');\\n\\n\\/** @var msProduct $product *\\/\\n$product = !empty($product) && $product != $modx->resource->id\\n    ? $modx->getObject(\'msProduct\', array(\'id\' => $product))\\n    : $modx->resource;\\nif (!$product || !($product instanceof msProduct)) {\\n    return \\"[msGallery] The resource with id = {$product->id} is not instance of msProduct.\\";\\n}\\n\\n$where = array(\\n    \'product_id\' => $product->id,\\n    \'parent\' => 0,\\n);\\nif (!empty($filetype)) {\\n    $where[\'type:IN\'] = array_map(\'trim\', explode(\',\', $filetype));\\n}\\nif (empty($showInactive)) {\\n    $where[\'active\'] = 1;\\n}\\n$select = array(\\n    \'msProductFile\' => \'*\',\\n);\\n\\n\\/\\/ Add user parameters\\nforeach (array(\'where\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = $scriptProperties[$v];\\n        if (!is_array($tmp)) {\\n            $tmp = json_decode($tmp, true);\\n        }\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n$pdoFetch->addTime(\'Conditions prepared\');\\n\\n$default = array(\\n    \'class\' => \'msProductFile\',\\n    \'where\' => $where,\\n    \'select\' => $select,\\n    \'limit\' => $limit,\\n    \'sortby\' => \'rank\',\\n    \'sortdir\' => \'ASC\',\\n    \'fastMode\' => false,\\n    \'return\' => \'data\',\\n    \'nestedChunkPrefix\' => \'minishop2_\',\\n);\\n\\/\\/ Merge all properties and run!\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\n$rows = $pdoFetch->run();\\n\\n$pdoFetch->addTime(\'Fetching thumbnails\');\\n\\n$resolution = array();\\n\\/** @var msProductData $data *\\/\\nif ($data = $product->getOne(\'Data\')) {\\n    if ($data->initializeMediaSource()) {\\n        $properties = $data->mediaSource->getProperties();\\n        if (isset($properties[\'thumbnails\'][\'value\'])) {\\n            $fileTypes = json_decode($properties[\'thumbnails\'][\'value\'], true);\\n            foreach ($fileTypes as $k => $v) {\\n                if (!is_numeric($k)) {\\n                    $resolution[] = $k;\\n                } elseif (!empty($v[\'name\'])) {\\n                    $resolution[] = $v[\'name\'];\\n                } else {\\n                    $resolution[] = @$v[\'w\'] . \'x\' . @$v[\'h\'];\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n\\/\\/ Processing rows\\n$files = array();\\nforeach ($rows as $row) {\\n    if (isset($row[\'type\']) && $row[\'type\'] == \'image\') {\\n        $c = $modx->newQuery(\'msProductFile\', array(\'parent\' => $row[\'id\']));\\n        $c->select(\'product_id,url\');\\n        $tstart = microtime(true);\\n        if ($c->prepare() && $c->stmt->execute()) {\\n            $modx->queryTime += microtime(true) - $tstart;\\n            $modx->executedQueries++;\\n            while ($tmp = $c->stmt->fetch(PDO::FETCH_ASSOC)) {\\n                if (preg_match(\\"#\\/{$tmp[\'product_id\']}\\/(.*?)\\/#\\", $tmp[\'url\'], $size)) {\\n                    $row[$size[1]] = $tmp[\'url\'];\\n                }\\n            }\\n        }\\n    } elseif (isset($row[\'type\'])) {\\n        $row[\'thumbnail\'] = file_exists(MODX_ASSETS_PATH . $extensionsDir . $row[\'type\'] . \'.png\')\\n            ? MODX_ASSETS_URL . $extensionsDir . $row[\'type\'] . \'.png\'\\n            : MODX_ASSETS_URL . $extensionsDir . \'other.png\';\\n        foreach ($resolution as $v) {\\n            $row[$v] = $row[\'thumbnail\'];\\n        }\\n    }\\n\\n    $files[] = $row;\\n}\\n\\n$output = $pdoFetch->getChunk($tpl, array(\\n    \'files\' => $files,\\n));\\n\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n    $output .= \'<pre class=\\"msGalleryLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\nif (!empty($toPlaceholder)) {\\n    $modx->setPlaceholder($toPlaceholder, $output);\\n} else {\\n    return $output;\\n}","locked":0,"properties":"a:10:{s:7:\\"product\\";a:7:{s:4:\\"name\\";s:7:\\"product\\";s:4:\\"desc\\";s:16:\\"ms2_prop_product\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:12:\\"ms2_prop_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:13:\\"tpl.msGallery\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:14:\\"ms2_prop_limit\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"offset\\";a:7:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:15:\\"ms2_prop_offset\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:15:\\"ms2_prop_sortby\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:4:\\"rank\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:16:\\"ms2_prop_sortdir\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"ASC\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:4:\\"DESC\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:22:\\"ms2_prop_toPlaceholder\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:16:\\"ms2_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:14:\\"ms2_prop_where\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"filetype\\";a:7:{s:4:\\"name\\";s:8:\\"filetype\\";s:4:\\"desc\\";s:17:\\"ms2_prop_filetype\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/minishop2\\/elements\\/snippets\\/snippet.ms_gallery.php","content":"\\/** @var modX $modx *\\/\\n\\/** @var array $scriptProperties *\\/\\n\\/** @var miniShop2 $miniShop2 *\\/\\n$miniShop2 = $modx->getService(\'miniShop2\');\\n$miniShop2->initialize($modx->context->key);\\n\\/** @var pdoFetch $pdoFetch *\\/\\n$fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\n$path = $modx->getOption(\'pdofetch_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\nif ($pdoClass = $modx->loadClass($fqn, $path, false, true)) {\\n    $pdoFetch = new $pdoClass($modx, $scriptProperties);\\n} else {\\n    return false;\\n}\\n$pdoFetch->addTime(\'pdoTools loaded.\');\\n\\n$extensionsDir = $modx->getOption(\'extensionsDir\', $scriptProperties, \'components\\/minishop2\\/img\\/mgr\\/extensions\\/\', true);\\n$limit = $modx->getOption(\'limit\', $scriptProperties, 0);\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'tpl.msGallery\');\\n\\n\\/** @var msProduct $product *\\/\\n$product = !empty($product) && $product != $modx->resource->id\\n    ? $modx->getObject(\'msProduct\', array(\'id\' => $product))\\n    : $modx->resource;\\nif (!$product || !($product instanceof msProduct)) {\\n    return \\"[msGallery] The resource with id = {$product->id} is not instance of msProduct.\\";\\n}\\n\\n$where = array(\\n    \'product_id\' => $product->id,\\n    \'parent\' => 0,\\n);\\nif (!empty($filetype)) {\\n    $where[\'type:IN\'] = array_map(\'trim\', explode(\',\', $filetype));\\n}\\nif (empty($showInactive)) {\\n    $where[\'active\'] = 1;\\n}\\n$select = array(\\n    \'msProductFile\' => \'*\',\\n);\\n\\n\\/\\/ Add user parameters\\nforeach (array(\'where\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = $scriptProperties[$v];\\n        if (!is_array($tmp)) {\\n            $tmp = json_decode($tmp, true);\\n        }\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n$pdoFetch->addTime(\'Conditions prepared\');\\n\\n$default = array(\\n    \'class\' => \'msProductFile\',\\n    \'where\' => $where,\\n    \'select\' => $select,\\n    \'limit\' => $limit,\\n    \'sortby\' => \'rank\',\\n    \'sortdir\' => \'ASC\',\\n    \'fastMode\' => false,\\n    \'return\' => \'data\',\\n    \'nestedChunkPrefix\' => \'minishop2_\',\\n);\\n\\/\\/ Merge all properties and run!\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\n$rows = $pdoFetch->run();\\n\\n$pdoFetch->addTime(\'Fetching thumbnails\');\\n\\n$resolution = array();\\n\\/** @var msProductData $data *\\/\\nif ($data = $product->getOne(\'Data\')) {\\n    if ($data->initializeMediaSource()) {\\n        $properties = $data->mediaSource->getProperties();\\n        if (isset($properties[\'thumbnails\'][\'value\'])) {\\n            $fileTypes = json_decode($properties[\'thumbnails\'][\'value\'], true);\\n            foreach ($fileTypes as $k => $v) {\\n                if (!is_numeric($k)) {\\n                    $resolution[] = $k;\\n                } elseif (!empty($v[\'name\'])) {\\n                    $resolution[] = $v[\'name\'];\\n                } else {\\n                    $resolution[] = @$v[\'w\'] . \'x\' . @$v[\'h\'];\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n\\/\\/ Processing rows\\n$files = array();\\nforeach ($rows as $row) {\\n    if (isset($row[\'type\']) && $row[\'type\'] == \'image\') {\\n        $c = $modx->newQuery(\'msProductFile\', array(\'parent\' => $row[\'id\']));\\n        $c->select(\'product_id,url\');\\n        $tstart = microtime(true);\\n        if ($c->prepare() && $c->stmt->execute()) {\\n            $modx->queryTime += microtime(true) - $tstart;\\n            $modx->executedQueries++;\\n            while ($tmp = $c->stmt->fetch(PDO::FETCH_ASSOC)) {\\n                if (preg_match(\\"#\\/{$tmp[\'product_id\']}\\/(.*?)\\/#\\", $tmp[\'url\'], $size)) {\\n                    $row[$size[1]] = $tmp[\'url\'];\\n                }\\n            }\\n        }\\n    } elseif (isset($row[\'type\'])) {\\n        $row[\'thumbnail\'] = file_exists(MODX_ASSETS_PATH . $extensionsDir . $row[\'type\'] . \'.png\')\\n            ? MODX_ASSETS_URL . $extensionsDir . $row[\'type\'] . \'.png\'\\n            : MODX_ASSETS_URL . $extensionsDir . \'other.png\';\\n        foreach ($resolution as $v) {\\n            $row[$v] = $row[\'thumbnail\'];\\n        }\\n    }\\n\\n    $files[] = $row;\\n}\\n\\n$output = $pdoFetch->getChunk($tpl, array(\\n    \'files\' => $files,\\n));\\n\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n    $output .= \'<pre class=\\"msGalleryLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\nif (!empty($toPlaceholder)) {\\n    $modx->setPlaceholder($toPlaceholder, $output);\\n} else {\\n    return $output;\\n}"}',
);