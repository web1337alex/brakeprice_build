<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'af9f459a37f0bdf643b3475402faa392',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => 'dbe9b1b1fc70c9c45641e1b3f67eb028',
  'native_key' => 73,
  'object' => '{"id":73,"source":1,"property_preprocess":0,"name":"msProducts","description":"","editor_type":0,"category":22,"cache_type":0,"snippet":"\\/** @var modX $modx *\\/\\n\\/** @var array $scriptProperties *\\/\\n\\/** @var miniShop2 $miniShop2 *\\/\\n$miniShop2 = $modx->getService(\'miniShop2\');\\n$miniShop2->initialize($modx->context->key);\\n\\/** @var pdoFetch $pdoFetch *\\/\\n$fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\n$path = $modx->getOption(\'pdofetch_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\nif ($pdoClass = $modx->loadClass($fqn, $path, false, true)) {\\n    $pdoFetch = new $pdoClass($modx, $scriptProperties);\\n} else {\\n    return false;\\n}\\n$pdoFetch->addTime(\'pdoTools loaded.\');\\n\\nif (isset($parents) && $parents === \'\') {\\n    $scriptProperties[\'parents\'] = $modx->resource->id;\\n}\\n\\nif (!empty($returnIds)) {\\n    $scriptProperties[\'return\'] = \'ids\';\\n}\\n\\nif ($scriptProperties[\'return\'] === \'ids\') {\\n    $scriptProperties[\'returnIds\'] = true;\\n}\\n\\n\\/\\/ Start build \\"where\\" expression\\n$where = array(\\n    \'class_key\' => \'msProduct\',\\n);\\nif (empty($showZeroPrice)) {\\n    $where[\'Data.price:>\'] = 0;\\n}\\n\\/\\/ Add grouping\\n$groupby = array(\\n    \'msProduct.id\',\\n);\\n\\n\\/\\/ Join tables\\n$leftJoin = array(\\n    \'Data\' => array(\'class\' => \'msProductData\'),\\n    \'Vendor\' => array(\'class\' => \'msVendor\', \'on\' => \'Data.vendor=Vendor.id\'),\\n);\\n\\n$select = array(\\n    \'msProduct\' => !empty($includeContent)\\n        ? $modx->getSelectColumns(\'msProduct\', \'msProduct\')\\n        : $modx->getSelectColumns(\'msProduct\', \'msProduct\', \'\', array(\'content\'), true),\\n    \'Data\' => $modx->getSelectColumns(\'msProductData\', \'Data\', \'\', array(\'id\'), true),\\n    \'Vendor\' => $modx->getSelectColumns(\'msVendor\', \'Vendor\', \'vendor.\', array(\'id\'), true),\\n);\\n\\n\\/\\/ Include thumbnails\\nif (!empty($includeThumbs)) {\\n    $thumbs = array_map(\'trim\', explode(\',\', $includeThumbs));\\n    foreach ($thumbs as $thumb) {\\n        if (empty($thumb)) {\\n            continue;\\n        }\\n        $leftJoin[$thumb] = array(\\n            \'class\' => \'msProductFile\',\\n            \'on\' => \\"`{$thumb}`.product_id = msProduct.id AND `{$thumb}`.rank = 0 AND `{$thumb}`.path LIKE \'%\\/{$thumb}\\/%\'\\",\\n        );\\n        $select[$thumb] = \\"`{$thumb}`.url as `{$thumb}`\\";\\n        $groupby[] = \\"`{$thumb}`.url\\";\\n    }\\n}\\n\\n\\/\\/ Include linked products\\n$innerJoin = array();\\nif (!empty($link) && !empty($master)) {\\n    $innerJoin[\'Link\'] = array(\\n        \'class\' => \'msProductLink\',\\n        \'on\' => \'msProduct.id = Link.slave AND Link.link = \' . $link,\\n    );\\n    $where[\'Link.master\'] = $master;\\n} elseif (!empty($link) && !empty($slave)) {\\n    $innerJoin[\'Link\'] = array(\\n        \'class\' => \'msProductLink\',\\n        \'on\' => \'msProduct.id = Link.master AND Link.link = \' . $link,\\n    );\\n    $where[\'Link.slave\'] = $slave;\\n}\\n\\n\\/\\/ Add user parameters\\nforeach (array(\'where\', \'leftJoin\', \'innerJoin\', \'select\', \'groupby\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = $scriptProperties[$v];\\n        if (!is_array($tmp)) {\\n            $tmp = json_decode($tmp, true);\\n        }\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n$pdoFetch->addTime(\'Conditions prepared\');\\n\\n\\/\\/ Add filters by options\\n$joinedOptions = array();\\nif (!empty($scriptProperties[\'optionFilters\'])) {\\n    $filters = json_decode($scriptProperties[\'optionFilters\'], true);\\n    foreach ($filters as $key => $value) {\\n        $components = explode(\':\', $key, 2);\\n\\n        if (count($components) === 2) {\\n            if (in_array(strtolower($components[0]), [\'or\', \'and\'])) {\\n                list($operator, $key) = $components;\\n            }\\n        }\\n\\n        $option = preg_replace(\'#\\\\:.*#\', \'\', $key);\\n        $key = str_replace($option, $option . \'.value\', $key);\\n\\n        if (!in_array($option, $joinedOptions)) {\\n            $leftJoin[$option] = array(\\n                \'class\' => \'msProductOption\',\\n                \'on\' => \\"`{$option}`.product_id = Data.id AND `{$option}`.key = \'{$option}\'\\",\\n            );\\n            $joinedOptions[] = $option;\\n        }\\n\\n        $index = isset($operator) && in_array(strtolower($operator), [\'or\', \'and\'], true)\\n            ? sprintf(\'%s:%s\', strtoupper($operator), $key)\\n            : $key;\\n        $where[$index] = $value;\\n    }\\n}\\n\\n\\/\\/ Add sort by options\\nif (!empty($scriptProperties[\'sortbyOptions\'])) {\\n    $sorts = array_map(\'trim\', explode(\',\', $scriptProperties[\'sortbyOptions\']));\\n    foreach ($sorts as $sort) {\\n        $sort = explode(\':\', $sort);\\n        $option = $sort[0];\\n        if (preg_match(\\"#\\\\b{$option}\\\\b#\\", $scriptProperties[\'sortby\'], $matches)) {\\n            $type = \'string\';\\n            if (isset($sort[1])) {\\n                $type = $sort[1];\\n            }\\n            switch ($type) {\\n                case \'number\':\\n                case \'decimal\':\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS DECIMAL(13,3))\\";\\n                    break;\\n                case \'int\':\\n                case \'integer\':\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS UNSIGNED INTEGER)\\";\\n                    break;\\n                case \'date\':\\n                case \'datetime\':\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS DATETIME)\\";\\n                    break;\\n                default:\\n                    $sortbyOptions = \\"`{$option}`.`value`\\";\\n                    break;\\n            }\\n            $scriptProperties[\'sortby\'] = preg_replace(\\"#\\\\b{$option}\\\\b#\\", $sortbyOptions, $scriptProperties[\'sortby\']);\\n            $groupby[] = \\"`{$option}`.value\\";\\n        }\\n\\n        if (!in_array($option, $joinedOptions)) {\\n            $leftJoin[$option] = array(\\n                \'class\' => \'msProductOption\',\\n                \'on\' => \\"`{$option}`.product_id = Data.id AND `{$option}`.key = \'{$option}\'\\",\\n            );\\n            $joinedOptions[] = $option;\\n        }\\n\\n    }\\n}\\n\\n$default = array(\\n    \'class\' => \'msProduct\',\\n    \'where\' => $where,\\n    \'leftJoin\' => $leftJoin,\\n    \'innerJoin\' => $innerJoin,\\n    \'select\' => $select,\\n    \'sortby\' => \'msProduct.id\',\\n    \'sortdir\' => \'ASC\',\\n    \'groupby\' => implode(\', \', $groupby),\\n    \'return\' => \'data\',\\n    \'nestedChunkPrefix\' => \'minishop2_\',\\n);\\n\\/\\/ Merge all properties and run!\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\n$rows = $pdoFetch->run();\\n\\n\\/\\/ Process rows\\n$output = array();\\nif (!empty($rows) && is_array($rows)) {\\n    $c = $modx->newQuery(\'modPluginEvent\', array(\'event:IN\' => array(\'msOnGetProductPrice\', \'msOnGetProductWeight\', \'msOnGetProductFields\')));\\n    $c->innerJoin(\'modPlugin\', \'modPlugin\', \'modPlugin.id = modPluginEvent.pluginid\');\\n    $c->where(\'modPlugin.disabled = 0\');\\n\\n    $modifications = $modx->getOption(\'ms2_price_snippet\', null, false, true) ||\\n        $modx->getOption(\'ms2_weight_snippet\', null, false, true) || $modx->getCount(\'modPluginEvent\', $c);\\n    if ($modifications) {\\n        \\/** @var msProductData $product *\\/\\n        $product = $modx->newObject(\'msProductData\');\\n    }\\n    $pdoFetch->addTime(\'Checked the active modifiers\');\\n\\n    $opt_time = 0;\\n    foreach ($rows as $k => $row) {\\n        if ($modifications) {\\n            $product->fromArray($row, \'\', true, true);\\n            $tmp = $row[\'price\'];\\n            $row[\'price\'] = $product->getPrice($row);\\n            $row[\'weight\'] = $product->getWeight($row);\\n            \\/\\/ A discount here, so we should replace old price\\n            if ($row[\'price\'] < $tmp) {\\n                $row[\'old_price\'] = $tmp;\\n            }\\n            $row = $product->modifyFields($row);\\n        }\\n        $row[\'price\'] = $miniShop2->formatPrice($row[\'price\']);\\n        $row[\'old_price\'] = $miniShop2->formatPrice($row[\'old_price\']);\\n        $row[\'weight\'] = $miniShop2->formatWeight($row[\'weight\']);\\n        $row[\'idx\'] = $pdoFetch->idx++;\\n\\n        $opt_time_start = microtime(true);\\n        $options = $modx->call(\'msProductData\', \'loadOptions\', array($modx, $row[\'id\']));\\n        $row = array_merge($row, $options);\\n        $opt_time += microtime(true) - $opt_time_start;\\n\\n        $tpl = $pdoFetch->defineChunk($row);\\n        $output[] = $pdoFetch->getChunk($tpl, $row);\\n    }\\n    $pdoFetch->addTime(\'Time to load products options\', $opt_time);\\n}\\n\\n$log = \'\';\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n    $log .= \'<pre class=\\"msProductsLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\n\\/\\/ Return output\\nif (is_string($rows)) {\\n    $modx->setPlaceholder(\'msProducts.log\', $log);\\n    if (!empty($toPlaceholder)) {\\n        $modx->setPlaceholder($toPlaceholder, $rows);\\n    } else {\\n        return $rows;\\n    }\\n} elseif (!empty($toSeparatePlaceholders)) {\\n    $output[\'log\'] = $log;\\n    $modx->setPlaceholders($output, $toSeparatePlaceholders);\\n} else {\\n    if (empty($outputSeparator)) {\\n        $outputSeparator = \\"\\\\n\\";\\n    }\\n    $output[\'log\'] = $log;\\n    $output = implode($outputSeparator, $output);\\n\\n    if (!empty($tplWrapper) && (!empty($wrapIfEmpty) || !empty($output))) {\\n        $output = $pdoFetch->getChunk($tplWrapper, array(\\n            \'output\' => $output,\\n        ));\\n    }\\n\\n    if (!empty($toPlaceholder)) {\\n        $modx->setPlaceholder($toPlaceholder, $output);\\n    } else {\\n        return $output;\\n    }\\n}","locked":0,"properties":"a:29:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:12:\\"ms2_prop_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:18:\\"tpl.msProducts.row\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:14:\\"ms2_prop_limit\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"offset\\";a:7:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:15:\\"ms2_prop_offset\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"depth\\";a:7:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:14:\\"ms2_prop_depth\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:15:\\"ms2_prop_sortby\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:2:\\"id\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"sortbyOptions\\";a:7:{s:4:\\"name\\";s:13:\\"sortbyOptions\\";s:4:\\"desc\\";s:22:\\"ms2_prop_sortbyOptions\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:16:\\"ms2_prop_sortdir\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"ASC\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:4:\\"DESC\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:22:\\"ms2_prop_toPlaceholder\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"toSeparatePlaceholders\\";a:7:{s:4:\\"name\\";s:22:\\"toSeparatePlaceholders\\";s:4:\\"desc\\";s:31:\\"ms2_prop_toSeparatePlaceholders\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:16:\\"ms2_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"parents\\";a:7:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:16:\\"ms2_prop_parents\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"resources\\";a:7:{s:4:\\"name\\";s:9:\\"resources\\";s:4:\\"desc\\";s:18:\\"ms2_prop_resources\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"includeContent\\";a:7:{s:4:\\"name\\";s:14:\\"includeContent\\";s:4:\\"desc\\";s:23:\\"ms2_prop_includeContent\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"includeTVs\\";a:7:{s:4:\\"name\\";s:10:\\"includeTVs\\";s:4:\\"desc\\";s:19:\\"ms2_prop_includeTVs\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"includeThumbs\\";a:7:{s:4:\\"name\\";s:13:\\"includeThumbs\\";s:4:\\"desc\\";s:22:\\"ms2_prop_includeThumbs\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"optionFilters\\";a:7:{s:4:\\"name\\";s:13:\\"optionFilters\\";s:4:\\"desc\\";s:22:\\"ms2_prop_optionFilters\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:14:\\"ms2_prop_where\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"link\\";a:7:{s:4:\\"name\\";s:4:\\"link\\";s:4:\\"desc\\";s:13:\\"ms2_prop_link\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"master\\";a:7:{s:4:\\"name\\";s:6:\\"master\\";s:4:\\"desc\\";s:15:\\"ms2_prop_master\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"slave\\";a:7:{s:4:\\"name\\";s:5:\\"slave\\";s:4:\\"desc\\";s:14:\\"ms2_prop_slave\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tvPrefix\\";a:7:{s:4:\\"name\\";s:8:\\"tvPrefix\\";s:4:\\"desc\\";s:17:\\"ms2_prop_tvPrefix\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"outputSeparator\\";a:7:{s:4:\\"name\\";s:15:\\"outputSeparator\\";s:4:\\"desc\\";s:24:\\"ms2_prop_outputSeparator\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:1:\\"\\n\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"returnIds\\";a:7:{s:4:\\"name\\";s:9:\\"returnIds\\";s:4:\\"desc\\";s:18:\\"ms2_prop_returnIds\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"return\\";a:7:{s:4:\\"name\\";s:6:\\"return\\";s:4:\\"desc\\";s:15:\\"ms2_prop_return\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:4:\\"data\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"showUnpublished\\";a:7:{s:4:\\"name\\";s:15:\\"showUnpublished\\";s:4:\\"desc\\";s:24:\\"ms2_prop_showUnpublished\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"showDeleted\\";a:7:{s:4:\\"name\\";s:11:\\"showDeleted\\";s:4:\\"desc\\";s:20:\\"ms2_prop_showDeleted\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"showHidden\\";a:7:{s:4:\\"name\\";s:10:\\"showHidden\\";s:4:\\"desc\\";s:19:\\"ms2_prop_showHidden\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"showZeroPrice\\";a:7:{s:4:\\"name\\";s:13:\\"showZeroPrice\\";s:4:\\"desc\\";s:22:\\"ms2_prop_showZeroPrice\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"wrapIfEmpty\\";a:7:{s:4:\\"name\\";s:11:\\"wrapIfEmpty\\";s:4:\\"desc\\";s:20:\\"ms2_prop_wrapIfEmpty\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/minishop2\\/elements\\/snippets\\/snippet.ms_products.php","content":"\\/** @var modX $modx *\\/\\n\\/** @var array $scriptProperties *\\/\\n\\/** @var miniShop2 $miniShop2 *\\/\\n$miniShop2 = $modx->getService(\'miniShop2\');\\n$miniShop2->initialize($modx->context->key);\\n\\/** @var pdoFetch $pdoFetch *\\/\\n$fqn = $modx->getOption(\'pdoFetch.class\', null, \'pdotools.pdofetch\', true);\\n$path = $modx->getOption(\'pdofetch_class_path\', null, MODX_CORE_PATH . \'components\\/pdotools\\/model\\/\', true);\\nif ($pdoClass = $modx->loadClass($fqn, $path, false, true)) {\\n    $pdoFetch = new $pdoClass($modx, $scriptProperties);\\n} else {\\n    return false;\\n}\\n$pdoFetch->addTime(\'pdoTools loaded.\');\\n\\nif (isset($parents) && $parents === \'\') {\\n    $scriptProperties[\'parents\'] = $modx->resource->id;\\n}\\n\\nif (!empty($returnIds)) {\\n    $scriptProperties[\'return\'] = \'ids\';\\n}\\n\\nif ($scriptProperties[\'return\'] === \'ids\') {\\n    $scriptProperties[\'returnIds\'] = true;\\n}\\n\\n\\/\\/ Start build \\"where\\" expression\\n$where = array(\\n    \'class_key\' => \'msProduct\',\\n);\\nif (empty($showZeroPrice)) {\\n    $where[\'Data.price:>\'] = 0;\\n}\\n\\/\\/ Add grouping\\n$groupby = array(\\n    \'msProduct.id\',\\n);\\n\\n\\/\\/ Join tables\\n$leftJoin = array(\\n    \'Data\' => array(\'class\' => \'msProductData\'),\\n    \'Vendor\' => array(\'class\' => \'msVendor\', \'on\' => \'Data.vendor=Vendor.id\'),\\n);\\n\\n$select = array(\\n    \'msProduct\' => !empty($includeContent)\\n        ? $modx->getSelectColumns(\'msProduct\', \'msProduct\')\\n        : $modx->getSelectColumns(\'msProduct\', \'msProduct\', \'\', array(\'content\'), true),\\n    \'Data\' => $modx->getSelectColumns(\'msProductData\', \'Data\', \'\', array(\'id\'), true),\\n    \'Vendor\' => $modx->getSelectColumns(\'msVendor\', \'Vendor\', \'vendor.\', array(\'id\'), true),\\n);\\n\\n\\/\\/ Include thumbnails\\nif (!empty($includeThumbs)) {\\n    $thumbs = array_map(\'trim\', explode(\',\', $includeThumbs));\\n    foreach ($thumbs as $thumb) {\\n        if (empty($thumb)) {\\n            continue;\\n        }\\n        $leftJoin[$thumb] = array(\\n            \'class\' => \'msProductFile\',\\n            \'on\' => \\"`{$thumb}`.product_id = msProduct.id AND `{$thumb}`.rank = 0 AND `{$thumb}`.path LIKE \'%\\/{$thumb}\\/%\'\\",\\n        );\\n        $select[$thumb] = \\"`{$thumb}`.url as `{$thumb}`\\";\\n        $groupby[] = \\"`{$thumb}`.url\\";\\n    }\\n}\\n\\n\\/\\/ Include linked products\\n$innerJoin = array();\\nif (!empty($link) && !empty($master)) {\\n    $innerJoin[\'Link\'] = array(\\n        \'class\' => \'msProductLink\',\\n        \'on\' => \'msProduct.id = Link.slave AND Link.link = \' . $link,\\n    );\\n    $where[\'Link.master\'] = $master;\\n} elseif (!empty($link) && !empty($slave)) {\\n    $innerJoin[\'Link\'] = array(\\n        \'class\' => \'msProductLink\',\\n        \'on\' => \'msProduct.id = Link.master AND Link.link = \' . $link,\\n    );\\n    $where[\'Link.slave\'] = $slave;\\n}\\n\\n\\/\\/ Add user parameters\\nforeach (array(\'where\', \'leftJoin\', \'innerJoin\', \'select\', \'groupby\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = $scriptProperties[$v];\\n        if (!is_array($tmp)) {\\n            $tmp = json_decode($tmp, true);\\n        }\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n$pdoFetch->addTime(\'Conditions prepared\');\\n\\n\\/\\/ Add filters by options\\n$joinedOptions = array();\\nif (!empty($scriptProperties[\'optionFilters\'])) {\\n    $filters = json_decode($scriptProperties[\'optionFilters\'], true);\\n    foreach ($filters as $key => $value) {\\n        $components = explode(\':\', $key, 2);\\n\\n        if (count($components) === 2) {\\n            if (in_array(strtolower($components[0]), [\'or\', \'and\'])) {\\n                list($operator, $key) = $components;\\n            }\\n        }\\n\\n        $option = preg_replace(\'#\\\\:.*#\', \'\', $key);\\n        $key = str_replace($option, $option . \'.value\', $key);\\n\\n        if (!in_array($option, $joinedOptions)) {\\n            $leftJoin[$option] = array(\\n                \'class\' => \'msProductOption\',\\n                \'on\' => \\"`{$option}`.product_id = Data.id AND `{$option}`.key = \'{$option}\'\\",\\n            );\\n            $joinedOptions[] = $option;\\n        }\\n\\n        $index = isset($operator) && in_array(strtolower($operator), [\'or\', \'and\'], true)\\n            ? sprintf(\'%s:%s\', strtoupper($operator), $key)\\n            : $key;\\n        $where[$index] = $value;\\n    }\\n}\\n\\n\\/\\/ Add sort by options\\nif (!empty($scriptProperties[\'sortbyOptions\'])) {\\n    $sorts = array_map(\'trim\', explode(\',\', $scriptProperties[\'sortbyOptions\']));\\n    foreach ($sorts as $sort) {\\n        $sort = explode(\':\', $sort);\\n        $option = $sort[0];\\n        if (preg_match(\\"#\\\\b{$option}\\\\b#\\", $scriptProperties[\'sortby\'], $matches)) {\\n            $type = \'string\';\\n            if (isset($sort[1])) {\\n                $type = $sort[1];\\n            }\\n            switch ($type) {\\n                case \'number\':\\n                case \'decimal\':\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS DECIMAL(13,3))\\";\\n                    break;\\n                case \'int\':\\n                case \'integer\':\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS UNSIGNED INTEGER)\\";\\n                    break;\\n                case \'date\':\\n                case \'datetime\':\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS DATETIME)\\";\\n                    break;\\n                default:\\n                    $sortbyOptions = \\"`{$option}`.`value`\\";\\n                    break;\\n            }\\n            $scriptProperties[\'sortby\'] = preg_replace(\\"#\\\\b{$option}\\\\b#\\", $sortbyOptions, $scriptProperties[\'sortby\']);\\n            $groupby[] = \\"`{$option}`.value\\";\\n        }\\n\\n        if (!in_array($option, $joinedOptions)) {\\n            $leftJoin[$option] = array(\\n                \'class\' => \'msProductOption\',\\n                \'on\' => \\"`{$option}`.product_id = Data.id AND `{$option}`.key = \'{$option}\'\\",\\n            );\\n            $joinedOptions[] = $option;\\n        }\\n\\n    }\\n}\\n\\n$default = array(\\n    \'class\' => \'msProduct\',\\n    \'where\' => $where,\\n    \'leftJoin\' => $leftJoin,\\n    \'innerJoin\' => $innerJoin,\\n    \'select\' => $select,\\n    \'sortby\' => \'msProduct.id\',\\n    \'sortdir\' => \'ASC\',\\n    \'groupby\' => implode(\', \', $groupby),\\n    \'return\' => \'data\',\\n    \'nestedChunkPrefix\' => \'minishop2_\',\\n);\\n\\/\\/ Merge all properties and run!\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\n$rows = $pdoFetch->run();\\n\\n\\/\\/ Process rows\\n$output = array();\\nif (!empty($rows) && is_array($rows)) {\\n    $c = $modx->newQuery(\'modPluginEvent\', array(\'event:IN\' => array(\'msOnGetProductPrice\', \'msOnGetProductWeight\', \'msOnGetProductFields\')));\\n    $c->innerJoin(\'modPlugin\', \'modPlugin\', \'modPlugin.id = modPluginEvent.pluginid\');\\n    $c->where(\'modPlugin.disabled = 0\');\\n\\n    $modifications = $modx->getOption(\'ms2_price_snippet\', null, false, true) ||\\n        $modx->getOption(\'ms2_weight_snippet\', null, false, true) || $modx->getCount(\'modPluginEvent\', $c);\\n    if ($modifications) {\\n        \\/** @var msProductData $product *\\/\\n        $product = $modx->newObject(\'msProductData\');\\n    }\\n    $pdoFetch->addTime(\'Checked the active modifiers\');\\n\\n    $opt_time = 0;\\n    foreach ($rows as $k => $row) {\\n        if ($modifications) {\\n            $product->fromArray($row, \'\', true, true);\\n            $tmp = $row[\'price\'];\\n            $row[\'price\'] = $product->getPrice($row);\\n            $row[\'weight\'] = $product->getWeight($row);\\n            \\/\\/ A discount here, so we should replace old price\\n            if ($row[\'price\'] < $tmp) {\\n                $row[\'old_price\'] = $tmp;\\n            }\\n            $row = $product->modifyFields($row);\\n        }\\n        $row[\'price\'] = $miniShop2->formatPrice($row[\'price\']);\\n        $row[\'old_price\'] = $miniShop2->formatPrice($row[\'old_price\']);\\n        $row[\'weight\'] = $miniShop2->formatWeight($row[\'weight\']);\\n        $row[\'idx\'] = $pdoFetch->idx++;\\n\\n        $opt_time_start = microtime(true);\\n        $options = $modx->call(\'msProductData\', \'loadOptions\', array($modx, $row[\'id\']));\\n        $row = array_merge($row, $options);\\n        $opt_time += microtime(true) - $opt_time_start;\\n\\n        $tpl = $pdoFetch->defineChunk($row);\\n        $output[] = $pdoFetch->getChunk($tpl, $row);\\n    }\\n    $pdoFetch->addTime(\'Time to load products options\', $opt_time);\\n}\\n\\n$log = \'\';\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n    $log .= \'<pre class=\\"msProductsLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\n\\/\\/ Return output\\nif (is_string($rows)) {\\n    $modx->setPlaceholder(\'msProducts.log\', $log);\\n    if (!empty($toPlaceholder)) {\\n        $modx->setPlaceholder($toPlaceholder, $rows);\\n    } else {\\n        return $rows;\\n    }\\n} elseif (!empty($toSeparatePlaceholders)) {\\n    $output[\'log\'] = $log;\\n    $modx->setPlaceholders($output, $toSeparatePlaceholders);\\n} else {\\n    if (empty($outputSeparator)) {\\n        $outputSeparator = \\"\\\\n\\";\\n    }\\n    $output[\'log\'] = $log;\\n    $output = implode($outputSeparator, $output);\\n\\n    if (!empty($tplWrapper) && (!empty($wrapIfEmpty) || !empty($output))) {\\n        $output = $pdoFetch->getChunk($tplWrapper, array(\\n            \'output\' => $output,\\n        ));\\n    }\\n\\n    if (!empty($toPlaceholder)) {\\n        $modx->setPlaceholder($toPlaceholder, $output);\\n    } else {\\n        return $output;\\n    }\\n}"}',
);