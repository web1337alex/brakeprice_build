<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '4ee3b37cb3e2eb65bf2c5f84b5991914',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => 'd5dd68870d2dbc8af43635da83b71b11',
  'native_key' => 23,
  'object' => '{"id":23,"source":0,"property_preprocess":0,"name":"exportMIGX2db","description":"","editor_type":0,"category":3,"cache_type":0,"snippet":"\\/**\\n * exportMIGX2db\\n *\\n * Copyright 2014 by Bruno Perner <b.perner@gmx.de>\\n * \\n * Sponsored by Simon Wurster <info@wurster-medien.de>\\n *\\n * exportMIGX2db is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * exportMIGX2db is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * exportMIGX2db; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package migx\\n *\\/\\n\\/**\\n * exportMIGX2db\\n *\\n * export Items from outputvalue of TV with custom-TV-input-type MIGX or from other JSON-string to db-table \\n *\\n * @version 1.0\\n * @author Bruno Perner <b.perner@gmx.de>\\n * @copyright Copyright &copy; 2014\\n * @license http:\\/\\/www.gnu.org\\/licenses\\/old-licenses\\/gpl-2.0.html GNU General Public License\\n * version 2 or (at your option) any later version.\\n * @package migx\\n *\\/\\n\\n\\/*\\n[[!exportMIGX2db? \\n&tvname=`references` \\n&resources=`25` \\n&packageName=`projekte`\\n&classname=`Projekt` \\n&migx_id_field=`migx_id` \\n&renamed_fields=`{\\"Firmen-URL\\":\\"Firmen_url\\",\\"Projekt-URL\\":\\"Projekt_URL\\",\\"main-image\\":\\"main_image\\"}`\\n]]\\n*\\/\\n\\n\\n$tvname = $modx->getOption(\'tvname\', $scriptProperties, \'\');\\n$resources = $modx->getOption(\'resources\', $scriptProperties, (isset($modx->resource) ? $modx->resource->get(\'id\') : \'\'));\\n$resources = explode(\',\', $resources);\\n$prefix = isset($scriptProperties[\'prefix\']) ? $scriptProperties[\'prefix\'] : null;\\n$packageName = $modx->getOption(\'packageName\', $scriptProperties, \'\');\\n$classname = $modx->getOption(\'classname\', $scriptProperties, \'\');\\n$value = $modx->getOption(\'value\', $scriptProperties, \'\');\\n$migx_id_field = $modx->getOption(\'migx_id_field\', $scriptProperties, \'\');\\n$pos_field = $modx->getOption(\'pos_field\', $scriptProperties, \'\');\\n$renamed_fields = $modx->getOption(\'renamed_fields\', $scriptProperties, \'\');\\n\\n$packagepath = $modx->getOption(\'core_path\') . \'components\\/\' . $packageName .\\n    \'\\/\';\\n$modelpath = $packagepath . \'model\\/\';\\n\\n$modx->addPackage($packageName, $modelpath, $prefix);\\n$added = 0;\\n$modified = 0;\\n\\nforeach ($resources as $docid) {\\n    \\n    $outputvalue = \'\';\\n    if (count($resources)==1){\\n        $outputvalue = $value;    \\n    }\\n    \\n    if (!empty($tvname)) {\\n        if ($tv = $modx->getObject(\'modTemplateVar\', array(\'name\' => $tvname))) {\\n\\n            $outputvalue = empty($outputvalue) ? $tv->renderOutput($docid) : $outputvalue;\\n        }\\n    }\\n\\n    if (!empty($outputvalue)) {\\n        $renamed = !empty($renamed_fields) ? $modx->fromJson($renamed_fields) : array();\\n\\n        $items = $modx->fromJSON($outputvalue);\\n        $pos = 1;\\n        $searchfields = array();\\n        if (is_array($items)) {\\n            foreach ($items as $fields) {\\n                $search = array();\\n                if (!empty($migx_id_field)) {\\n                    $search[$migx_id_field] = $fields[\'MIGX_id\'];\\n                }\\n                if (!empty($resource_id_field)) {\\n                    $search[$resource_id_field] = $docid;\\n                }\\n                if (!empty($migx_id_field) && $object = $modx->getObject($classname, $search)) {\\n                    $mode = \'mod\';\\n                } else {\\n                    $object = $modx->newObject($classname);\\n                    $object->fromArray($search);\\n                    $mode = \'add\';\\n                }\\n                foreach ($fields as $field => $value) {\\n                    $fieldname = array_key_exists($field, $renamed) ? $renamed[$field] : $field;\\n                    $object->set($fieldname, $value);\\n                }\\n                if (!empty($pos_field)) {\\n                    $object->set($pos_field,$pos) ;\\n                }                \\n                if ($object->save()) {\\n                    if ($mode == \'add\') {\\n                        $added++;\\n                    } else {\\n                        $modified++;\\n                    }\\n                }\\n                $pos++;\\n            }\\n            \\n        }\\n    }\\n}\\n\\n\\nreturn $added . \' rows added to db, \' . $modified . \' existing rows actualized\';","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * exportMIGX2db\\n *\\n * Copyright 2014 by Bruno Perner <b.perner@gmx.de>\\n * \\n * Sponsored by Simon Wurster <info@wurster-medien.de>\\n *\\n * exportMIGX2db is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * exportMIGX2db is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * exportMIGX2db; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package migx\\n *\\/\\n\\/**\\n * exportMIGX2db\\n *\\n * export Items from outputvalue of TV with custom-TV-input-type MIGX or from other JSON-string to db-table \\n *\\n * @version 1.0\\n * @author Bruno Perner <b.perner@gmx.de>\\n * @copyright Copyright &copy; 2014\\n * @license http:\\/\\/www.gnu.org\\/licenses\\/old-licenses\\/gpl-2.0.html GNU General Public License\\n * version 2 or (at your option) any later version.\\n * @package migx\\n *\\/\\n\\n\\/*\\n[[!exportMIGX2db? \\n&tvname=`references` \\n&resources=`25` \\n&packageName=`projekte`\\n&classname=`Projekt` \\n&migx_id_field=`migx_id` \\n&renamed_fields=`{\\"Firmen-URL\\":\\"Firmen_url\\",\\"Projekt-URL\\":\\"Projekt_URL\\",\\"main-image\\":\\"main_image\\"}`\\n]]\\n*\\/\\n\\n\\n$tvname = $modx->getOption(\'tvname\', $scriptProperties, \'\');\\n$resources = $modx->getOption(\'resources\', $scriptProperties, (isset($modx->resource) ? $modx->resource->get(\'id\') : \'\'));\\n$resources = explode(\',\', $resources);\\n$prefix = isset($scriptProperties[\'prefix\']) ? $scriptProperties[\'prefix\'] : null;\\n$packageName = $modx->getOption(\'packageName\', $scriptProperties, \'\');\\n$classname = $modx->getOption(\'classname\', $scriptProperties, \'\');\\n$value = $modx->getOption(\'value\', $scriptProperties, \'\');\\n$migx_id_field = $modx->getOption(\'migx_id_field\', $scriptProperties, \'\');\\n$pos_field = $modx->getOption(\'pos_field\', $scriptProperties, \'\');\\n$renamed_fields = $modx->getOption(\'renamed_fields\', $scriptProperties, \'\');\\n\\n$packagepath = $modx->getOption(\'core_path\') . \'components\\/\' . $packageName .\\n    \'\\/\';\\n$modelpath = $packagepath . \'model\\/\';\\n\\n$modx->addPackage($packageName, $modelpath, $prefix);\\n$added = 0;\\n$modified = 0;\\n\\nforeach ($resources as $docid) {\\n    \\n    $outputvalue = \'\';\\n    if (count($resources)==1){\\n        $outputvalue = $value;    \\n    }\\n    \\n    if (!empty($tvname)) {\\n        if ($tv = $modx->getObject(\'modTemplateVar\', array(\'name\' => $tvname))) {\\n\\n            $outputvalue = empty($outputvalue) ? $tv->renderOutput($docid) : $outputvalue;\\n        }\\n    }\\n\\n    if (!empty($outputvalue)) {\\n        $renamed = !empty($renamed_fields) ? $modx->fromJson($renamed_fields) : array();\\n\\n        $items = $modx->fromJSON($outputvalue);\\n        $pos = 1;\\n        $searchfields = array();\\n        if (is_array($items)) {\\n            foreach ($items as $fields) {\\n                $search = array();\\n                if (!empty($migx_id_field)) {\\n                    $search[$migx_id_field] = $fields[\'MIGX_id\'];\\n                }\\n                if (!empty($resource_id_field)) {\\n                    $search[$resource_id_field] = $docid;\\n                }\\n                if (!empty($migx_id_field) && $object = $modx->getObject($classname, $search)) {\\n                    $mode = \'mod\';\\n                } else {\\n                    $object = $modx->newObject($classname);\\n                    $object->fromArray($search);\\n                    $mode = \'add\';\\n                }\\n                foreach ($fields as $field => $value) {\\n                    $fieldname = array_key_exists($field, $renamed) ? $renamed[$field] : $field;\\n                    $object->set($fieldname, $value);\\n                }\\n                if (!empty($pos_field)) {\\n                    $object->set($pos_field,$pos) ;\\n                }                \\n                if ($object->save()) {\\n                    if ($mode == \'add\') {\\n                        $added++;\\n                    } else {\\n                        $modified++;\\n                    }\\n                }\\n                $pos++;\\n            }\\n            \\n        }\\n    }\\n}\\n\\n\\nreturn $added . \' rows added to db, \' . $modified . \' existing rows actualized\';"}',
);