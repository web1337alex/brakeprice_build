<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '598e2370a4c8f1342d7e105169b5af8c',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '3e6d98a091cfef4f5c12ba4b47c06d05',
  'native_key' => 81,
  'object' => '{"id":81,"source":1,"property_preprocess":0,"name":"mapexDrawMap","description":"","editor_type":0,"category":23,"cache_type":0,"snippet":"$map = $modx->getOption(\'map\', $scriptProperties, \'\');\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'mapexMapTpl\');\\nif($map == \'\' || $tpl == \'\'){\\n    return \'\';\\n}\\n$placemarkTpl = $modx->getOption(\'placemarkTpl\', $scriptProperties, \'mapexPlacemarkTpl\');\\n$polylineTpl = $modx->getOption(\'polylineTpl\', $scriptProperties, \'mapexPolylineTpl\');\\n$polygoneTpl = $modx->getOption(\'polygoneTpl\', $scriptProperties, \'mapexPolygoneTpl\');\\n$routeTpl = $modx->getOption(\'routeTpl\', $scriptProperties, \'mapexRouteTpl\');\\n\\n\\/\\/ can be: \\n\\/\\/ mapTools,typeSelector,zoomControl or smallZoomControl,scaleLine,miniMap,searchControl,trafficControl\\n$controls = $modx->getOption(\'controls\', $scriptProperties, \'mapTools\');\\n\\n$map = json_decode($map);\\n\\n$mapId = $modx->getOption(\'mapId\', $scriptProperties, \'mapexMap\');\\n$width = $modx->getOption(\'mapWidth\', $scriptProperties, \'500px\');\\n$height = $modx->getOption(\'mapHeight\', $scriptProperties, \'400px\');\\n\\n$includeJs = $modx->getOption(\'includeJs\', $scriptProperties, 1);\\nif($includeJs){\\n    $lang = $modx->getOption(\'lang\', $scriptProperties, \'ru-RU\');\\n    $modx->regClientStartupScript(\'\\/\\/api-maps.yandex.ru\\/2.0-stable\\/?load=package.full&lang=\'.$lang);\\n}\\n\\nif (!function_exists(\'mapex_prepare_coords\')) { \\n  function mapex_prepare_coords($coords) {\\n    return \'[\'.str_replace(\',\',\'.\',$coords[0]).\',\'.str_replace(\',\',\'.\',$coords[1]).\']\';\\n  } \\n} \\n\\n\\/\\/ Placemarks\\n$placemarks = \\"\\";\\nforeach($map->placemarks as $ob){\\n    $placemarks .= $modx->getChunk($placemarkTpl, array(\\n        \'mapId\' => $mapId,\\n        \'coords\' => mapex_prepare_coords($ob->coords),\\n        \'properties\' => json_encode(array(\\n            \'iconContent\' => $ob->params->iconContent,\\n            \'balloonContentBody\' => $ob->params->balloonContentBody,\\n            \'balloonContentHeader\' => $ob->params->balloonContentHeader,\\n        )),\\n        \'options\' => json_encode(array(\\n            \'preset\' => \'twirl#\'.$ob->params->color.(empty($ob->params->iconContent) ? \'DotIcon\' : \'StretchyIcon\'),\\n        )),\\n    ));\\n}\\n\\/\\/ colors for lines and polygons \\n$colors = array(\\n      \'blue\' => \'#006cff\',\\n      \'lightblue\' => \'#66c7ff\',\\n      \'night\' => \'#004056\',\\n      \'darkblue\' => \'#00339a\',\\n      \'green\' => \'#33cc00\',\\n      \'white\' => \'#ffffff\',\\n      \'red\' => \'#ff0000\',\\n      \'orange\' => \'#ffb400\',\\n      \'darkorange\' => \'#ff6600\',\\n      \'yellow\' => \'#ffea00\',\\n      \'violet\' => \'#b832fd\',\\n      \'pink\' => \'#fd32fb\'\\n    );\\n\\n\\/\\/ Lines\\n$polylines = \\"\\";\\nforeach($map->lines as $ob){\\n    $coords = array();\\n    foreach($ob->coords as $c){\\n        $coords[] = mapex_prepare_coords($c);\\n    }\\n    $polylines .= $modx->getChunk($polylineTpl, array(\\n        \'mapId\' => $mapId,\\n        \'coords\' => \'[ \'.implode(\', \', $coords).\' ]\',\\n        \'properties\' => json_encode(array(\\n            \'balloonContent\' => $ob->params->balloonContent,\\n        )),\\n        \'options\' => json_encode(array(\\n            \'strokeWidth\' => $ob->params->strokeWidth,\\n            \'strokeColor\' => array_key_exists($ob->params->strokeColor,$colors) ? $colors[$ob->params->strokeColor] : $ob->params->strokeColor,\\n            \'opacity\' => $ob->params->opacity,\\n        )),\\n    ));\\n}\\n\\/\\/ Polygons\\n$polygons = \\"\\";\\nforeach($map->polygons as $ob){\\n    $coords = array();\\n    foreach($ob->coords as $c){\\n        $coords2 = array();\\n        foreach($c as $c2){\\n            $coords2[] = mapex_prepare_coords($c2);\\n        }\\n        $coords[] = \'[ \'.implode(\', \', $coords2).\' ]\';\\n    }\\n\\n    $polygons .= $modx->getChunk($polygoneTpl, array(\\n        \'mapId\' => $mapId,\\n        \'coords\' => \'[ \'.implode(\', \', $coords).\' ]\',\\n        \'properties\' => json_encode(array(\\n            \'balloonContent\' => $ob->params->balloonContent,\\n        )),\\n        \'options\' => json_encode(array(\\n            \'strokeWidth\' => $ob->params->strokeWidth,\\n            \'strokeColor\' => array_key_exists($ob->params->strokeColor,$colors) ? $colors[$ob->params->strokeColor] : $ob->params->strokeColor,\\n            \'fillColor\' => $colors[$ob->params->fillColor],\\n            \'opacity\' => $ob->params->opacity,\\n        )),\\n    ));\\n}\\n\\/\\/ Routes\\n$routes = \\"\\";\\nif(count($map->routes) > 0){\\n    $coords = array();\\n    foreach($map->routes as $r){\\n        $coords[] = mapex_prepare_coords($r);\\n    }\\n    $routes .= $modx->getChunk($routeTpl, array(\\n            \'coords\' => \'[ \'.implode(\', \', $coords).\' ]\',\\n        ));\\n}\\n\\n$style = \'\';\\nif($width != \'\' && $height != \'\'){\\n    $style = \'style=\\"width:\'.$width.\';height:\'.$height.\';\\"\';\\n}\\n\\/\\/ Map\\nreturn $modx->getChunk($tpl, array(\\n        \'style\' => $style,\\n        \'mapId\' => $mapId,\\n        \'map\' => array(\\n                \'center\' => mapex_prepare_coords($map->coords->center),\\n                \'zoom\' => $map->coords->zoom,\\n                \'type\' => $map->type,\\n            ),\\n        \'controls\' => $controls,\\n        \'placemarks\' => $placemarks,\\n        \'polylines\' => $polylines,\\n        \'polygons\' => $polygons,\\n        \'routes\' => $routes,\\n    ));","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"$map = $modx->getOption(\'map\', $scriptProperties, \'\');\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'mapexMapTpl\');\\nif($map == \'\' || $tpl == \'\'){\\n    return \'\';\\n}\\n$placemarkTpl = $modx->getOption(\'placemarkTpl\', $scriptProperties, \'mapexPlacemarkTpl\');\\n$polylineTpl = $modx->getOption(\'polylineTpl\', $scriptProperties, \'mapexPolylineTpl\');\\n$polygoneTpl = $modx->getOption(\'polygoneTpl\', $scriptProperties, \'mapexPolygoneTpl\');\\n$routeTpl = $modx->getOption(\'routeTpl\', $scriptProperties, \'mapexRouteTpl\');\\n\\n\\/\\/ can be: \\n\\/\\/ mapTools,typeSelector,zoomControl or smallZoomControl,scaleLine,miniMap,searchControl,trafficControl\\n$controls = $modx->getOption(\'controls\', $scriptProperties, \'mapTools\');\\n\\n$map = json_decode($map);\\n\\n$mapId = $modx->getOption(\'mapId\', $scriptProperties, \'mapexMap\');\\n$width = $modx->getOption(\'mapWidth\', $scriptProperties, \'500px\');\\n$height = $modx->getOption(\'mapHeight\', $scriptProperties, \'400px\');\\n\\n$includeJs = $modx->getOption(\'includeJs\', $scriptProperties, 1);\\nif($includeJs){\\n    $lang = $modx->getOption(\'lang\', $scriptProperties, \'ru-RU\');\\n    $modx->regClientStartupScript(\'\\/\\/api-maps.yandex.ru\\/2.0-stable\\/?load=package.full&lang=\'.$lang);\\n}\\n\\nif (!function_exists(\'mapex_prepare_coords\')) { \\n  function mapex_prepare_coords($coords) {\\n    return \'[\'.str_replace(\',\',\'.\',$coords[0]).\',\'.str_replace(\',\',\'.\',$coords[1]).\']\';\\n  } \\n} \\n\\n\\/\\/ Placemarks\\n$placemarks = \\"\\";\\nforeach($map->placemarks as $ob){\\n    $placemarks .= $modx->getChunk($placemarkTpl, array(\\n        \'mapId\' => $mapId,\\n        \'coords\' => mapex_prepare_coords($ob->coords),\\n        \'properties\' => json_encode(array(\\n            \'iconContent\' => $ob->params->iconContent,\\n            \'balloonContentBody\' => $ob->params->balloonContentBody,\\n            \'balloonContentHeader\' => $ob->params->balloonContentHeader,\\n        )),\\n        \'options\' => json_encode(array(\\n            \'preset\' => \'twirl#\'.$ob->params->color.(empty($ob->params->iconContent) ? \'DotIcon\' : \'StretchyIcon\'),\\n        )),\\n    ));\\n}\\n\\/\\/ colors for lines and polygons \\n$colors = array(\\n      \'blue\' => \'#006cff\',\\n      \'lightblue\' => \'#66c7ff\',\\n      \'night\' => \'#004056\',\\n      \'darkblue\' => \'#00339a\',\\n      \'green\' => \'#33cc00\',\\n      \'white\' => \'#ffffff\',\\n      \'red\' => \'#ff0000\',\\n      \'orange\' => \'#ffb400\',\\n      \'darkorange\' => \'#ff6600\',\\n      \'yellow\' => \'#ffea00\',\\n      \'violet\' => \'#b832fd\',\\n      \'pink\' => \'#fd32fb\'\\n    );\\n\\n\\/\\/ Lines\\n$polylines = \\"\\";\\nforeach($map->lines as $ob){\\n    $coords = array();\\n    foreach($ob->coords as $c){\\n        $coords[] = mapex_prepare_coords($c);\\n    }\\n    $polylines .= $modx->getChunk($polylineTpl, array(\\n        \'mapId\' => $mapId,\\n        \'coords\' => \'[ \'.implode(\', \', $coords).\' ]\',\\n        \'properties\' => json_encode(array(\\n            \'balloonContent\' => $ob->params->balloonContent,\\n        )),\\n        \'options\' => json_encode(array(\\n            \'strokeWidth\' => $ob->params->strokeWidth,\\n            \'strokeColor\' => array_key_exists($ob->params->strokeColor,$colors) ? $colors[$ob->params->strokeColor] : $ob->params->strokeColor,\\n            \'opacity\' => $ob->params->opacity,\\n        )),\\n    ));\\n}\\n\\/\\/ Polygons\\n$polygons = \\"\\";\\nforeach($map->polygons as $ob){\\n    $coords = array();\\n    foreach($ob->coords as $c){\\n        $coords2 = array();\\n        foreach($c as $c2){\\n            $coords2[] = mapex_prepare_coords($c2);\\n        }\\n        $coords[] = \'[ \'.implode(\', \', $coords2).\' ]\';\\n    }\\n\\n    $polygons .= $modx->getChunk($polygoneTpl, array(\\n        \'mapId\' => $mapId,\\n        \'coords\' => \'[ \'.implode(\', \', $coords).\' ]\',\\n        \'properties\' => json_encode(array(\\n            \'balloonContent\' => $ob->params->balloonContent,\\n        )),\\n        \'options\' => json_encode(array(\\n            \'strokeWidth\' => $ob->params->strokeWidth,\\n            \'strokeColor\' => array_key_exists($ob->params->strokeColor,$colors) ? $colors[$ob->params->strokeColor] : $ob->params->strokeColor,\\n            \'fillColor\' => $colors[$ob->params->fillColor],\\n            \'opacity\' => $ob->params->opacity,\\n        )),\\n    ));\\n}\\n\\/\\/ Routes\\n$routes = \\"\\";\\nif(count($map->routes) > 0){\\n    $coords = array();\\n    foreach($map->routes as $r){\\n        $coords[] = mapex_prepare_coords($r);\\n    }\\n    $routes .= $modx->getChunk($routeTpl, array(\\n            \'coords\' => \'[ \'.implode(\', \', $coords).\' ]\',\\n        ));\\n}\\n\\n$style = \'\';\\nif($width != \'\' && $height != \'\'){\\n    $style = \'style=\\"width:\'.$width.\';height:\'.$height.\';\\"\';\\n}\\n\\/\\/ Map\\nreturn $modx->getChunk($tpl, array(\\n        \'style\' => $style,\\n        \'mapId\' => $mapId,\\n        \'map\' => array(\\n                \'center\' => mapex_prepare_coords($map->coords->center),\\n                \'zoom\' => $map->coords->zoom,\\n                \'type\' => $map->type,\\n            ),\\n        \'controls\' => $controls,\\n        \'placemarks\' => $placemarks,\\n        \'polylines\' => $polylines,\\n        \'polygons\' => $polygons,\\n        \'routes\' => $routes,\\n    ));"}',
);